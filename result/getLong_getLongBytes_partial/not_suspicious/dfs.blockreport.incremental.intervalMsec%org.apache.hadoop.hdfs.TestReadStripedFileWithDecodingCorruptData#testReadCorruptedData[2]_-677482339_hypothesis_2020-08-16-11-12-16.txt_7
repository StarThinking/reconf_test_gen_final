reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is -1
v1v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=1, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-1442062346-172.17.0.20-1597576778186:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:38795,DS-49eb9660-981d-4a7a-b3c8-394f9617dc08,DISK], DatanodeInfoWithStorage[127.0.0.1:35359,DS-fb900ab1-01bb-4cfc-8e05-fe703a71dfaf,DISK], DatanodeInfoWithStorage[127.0.0.1:43649,DS-07e8616b-e7e7-400b-b3a1-db6f7ce07a12,DISK], DatanodeInfoWithStorage[127.0.0.1:45908,DS-03d217b2-29d6-44d0-b4a7-3dda94476973,DISK], DatanodeInfoWithStorage[127.0.0.1:33451,DS-09f3eed1-3dd8-4685-9548-b99c6ac8d393,DISK], DatanodeInfoWithStorage[127.0.0.1:46708,DS-1e4546bb-3378-495a-b15b-878bfbeb42d9,DISK]]; indices=[0, 2, 3, 4, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-1442062346-172.17.0.20-1597576778186:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:38795,DS-49eb9660-981d-4a7a-b3c8-394f9617dc08,DISK], DatanodeInfoWithStorage[127.0.0.1:35359,DS-fb900ab1-01bb-4cfc-8e05-fe703a71dfaf,DISK], DatanodeInfoWithStorage[127.0.0.1:43649,DS-07e8616b-e7e7-400b-b3a1-db6f7ce07a12,DISK], DatanodeInfoWithStorage[127.0.0.1:45908,DS-03d217b2-29d6-44d0-b4a7-3dda94476973,DISK], DatanodeInfoWithStorage[127.0.0.1:33451,DS-09f3eed1-3dd8-4685-9548-b99c6ac8d393,DISK], DatanodeInfoWithStorage[127.0.0.1:46708,DS-1e4546bb-3378-495a-b15b-878bfbeb42d9,DISK]]; indices=[0, 2, 3, 4, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=1, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-1442062346-172.17.0.20-1597576778186:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:38795,DS-49eb9660-981d-4a7a-b3c8-394f9617dc08,DISK], DatanodeInfoWithStorage[127.0.0.1:35359,DS-fb900ab1-01bb-4cfc-8e05-fe703a71dfaf,DISK], DatanodeInfoWithStorage[127.0.0.1:43649,DS-07e8616b-e7e7-400b-b3a1-db6f7ce07a12,DISK], DatanodeInfoWithStorage[127.0.0.1:45908,DS-03d217b2-29d6-44d0-b4a7-3dda94476973,DISK], DatanodeInfoWithStorage[127.0.0.1:33451,DS-09f3eed1-3dd8-4685-9548-b99c6ac8d393,DISK], DatanodeInfoWithStorage[127.0.0.1:46708,DS-1e4546bb-3378-495a-b15b-878bfbeb42d9,DISK]]; indices=[0, 2, 3, 4, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-1442062346-172.17.0.20-1597576778186:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:38795,DS-49eb9660-981d-4a7a-b3c8-394f9617dc08,DISK], DatanodeInfoWithStorage[127.0.0.1:35359,DS-fb900ab1-01bb-4cfc-8e05-fe703a71dfaf,DISK], DatanodeInfoWithStorage[127.0.0.1:43649,DS-07e8616b-e7e7-400b-b3a1-db6f7ce07a12,DISK], DatanodeInfoWithStorage[127.0.0.1:45908,DS-03d217b2-29d6-44d0-b4a7-3dda94476973,DISK], DatanodeInfoWithStorage[127.0.0.1:33451,DS-09f3eed1-3dd8-4685-9548-b99c6ac8d393,DISK], DatanodeInfoWithStorage[127.0.0.1:46708,DS-1e4546bb-3378-495a-b15b-878bfbeb42d9,DISK]]; indices=[0, 2, 3, 4, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is -1

Test vvMode=v2v2
tr.result is 1
v1v1 or v2v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=0, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-535734889-172.17.0.20-1597578300493:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37222,DS-71b8a44a-a8cf-408e-8ab7-0683b683df23,DISK], DatanodeInfoWithStorage[127.0.0.1:40977,DS-13442651-d5f9-4d98-b152-1c151eddb42a,DISK], DatanodeInfoWithStorage[127.0.0.1:40099,DS-ef0f3074-1144-48ee-bb96-1c0291ead374,DISK], DatanodeInfoWithStorage[127.0.0.1:42520,DS-dabece21-3951-44a3-9b0e-75214420e850,DISK], DatanodeInfoWithStorage[127.0.0.1:33099,DS-6091f6d5-3171-4af9-9f14-382ced66cbb4,DISK], DatanodeInfoWithStorage[127.0.0.1:45547,DS-78e930a4-0b2f-441d-aa93-c070fe23b075,DISK]]; indices=[0, 1, 3, 4, 5, 6]}];  lastLocatedBlock=LocatedStripedBlock{BP-535734889-172.17.0.20-1597578300493:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37222,DS-71b8a44a-a8cf-408e-8ab7-0683b683df23,DISK], DatanodeInfoWithStorage[127.0.0.1:40977,DS-13442651-d5f9-4d98-b152-1c151eddb42a,DISK], DatanodeInfoWithStorage[127.0.0.1:40099,DS-ef0f3074-1144-48ee-bb96-1c0291ead374,DISK], DatanodeInfoWithStorage[127.0.0.1:42520,DS-dabece21-3951-44a3-9b0e-75214420e850,DISK], DatanodeInfoWithStorage[127.0.0.1:33099,DS-6091f6d5-3171-4af9-9f14-382ced66cbb4,DISK], DatanodeInfoWithStorage[127.0.0.1:45547,DS-78e930a4-0b2f-441d-aa93-c070fe23b075,DISK]]; indices=[0, 1, 3, 4, 5, 6]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=0, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-535734889-172.17.0.20-1597578300493:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37222,DS-71b8a44a-a8cf-408e-8ab7-0683b683df23,DISK], DatanodeInfoWithStorage[127.0.0.1:40977,DS-13442651-d5f9-4d98-b152-1c151eddb42a,DISK], DatanodeInfoWithStorage[127.0.0.1:40099,DS-ef0f3074-1144-48ee-bb96-1c0291ead374,DISK], DatanodeInfoWithStorage[127.0.0.1:42520,DS-dabece21-3951-44a3-9b0e-75214420e850,DISK], DatanodeInfoWithStorage[127.0.0.1:33099,DS-6091f6d5-3171-4af9-9f14-382ced66cbb4,DISK], DatanodeInfoWithStorage[127.0.0.1:45547,DS-78e930a4-0b2f-441d-aa93-c070fe23b075,DISK]]; indices=[0, 1, 3, 4, 5, 6]}];  lastLocatedBlock=LocatedStripedBlock{BP-535734889-172.17.0.20-1597578300493:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37222,DS-71b8a44a-a8cf-408e-8ab7-0683b683df23,DISK], DatanodeInfoWithStorage[127.0.0.1:40977,DS-13442651-d5f9-4d98-b152-1c151eddb42a,DISK], DatanodeInfoWithStorage[127.0.0.1:40099,DS-ef0f3074-1144-48ee-bb96-1c0291ead374,DISK], DatanodeInfoWithStorage[127.0.0.1:42520,DS-dabece21-3951-44a3-9b0e-75214420e850,DISK], DatanodeInfoWithStorage[127.0.0.1:33099,DS-6091f6d5-3171-4af9-9f14-382ced66cbb4,DISK], DatanodeInfoWithStorage[127.0.0.1:45547,DS-78e930a4-0b2f-441d-aa93-c070fe23b075,DISK]]; indices=[0, 1, 3, 4, 5, 6]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readParityChunks(StripeReader.java:211)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:378)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is -1

Test vvMode=v2v2
tr.result is 1
v1v1 or v2v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-581724985-172.17.0.20-1597579297168:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:33607,DS-44385b0f-b2b6-4c62-b593-a1460da3874e,DISK], DatanodeInfoWithStorage[127.0.0.1:42195,DS-0723345e-b6b5-450e-8ce6-c1086690f6f7,DISK], DatanodeInfoWithStorage[127.0.0.1:35294,DS-1dacc2fd-5546-4c70-bd04-10a9062e070b,DISK], DatanodeInfoWithStorage[127.0.0.1:42991,DS-16d27f53-2d83-4637-a12e-1e12ece928f1,DISK], DatanodeInfoWithStorage[127.0.0.1:46000,DS-0c494599-daac-4b1b-8738-5a1007f50784,DISK], DatanodeInfoWithStorage[127.0.0.1:37023,DS-a0b0dfe7-ced4-4972-8d29-68596b6cd5a3,DISK], DatanodeInfoWithStorage[127.0.0.1:34881,DS-69ed7801-b985-4e5f-8b75-0ebb60d40c45,DISK]]; indices=[0, 1, 2, 3, 4, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-581724985-172.17.0.20-1597579297168:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:33607,DS-44385b0f-b2b6-4c62-b593-a1460da3874e,DISK], DatanodeInfoWithStorage[127.0.0.1:42195,DS-0723345e-b6b5-450e-8ce6-c1086690f6f7,DISK], DatanodeInfoWithStorage[127.0.0.1:35294,DS-1dacc2fd-5546-4c70-bd04-10a9062e070b,DISK], DatanodeInfoWithStorage[127.0.0.1:42991,DS-16d27f53-2d83-4637-a12e-1e12ece928f1,DISK], DatanodeInfoWithStorage[127.0.0.1:46000,DS-0c494599-daac-4b1b-8738-5a1007f50784,DISK], DatanodeInfoWithStorage[127.0.0.1:37023,DS-a0b0dfe7-ced4-4972-8d29-68596b6cd5a3,DISK], DatanodeInfoWithStorage[127.0.0.1:34881,DS-69ed7801-b985-4e5f-8b75-0ebb60d40c45,DISK]]; indices=[0, 1, 2, 3, 4, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-581724985-172.17.0.20-1597579297168:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:33607,DS-44385b0f-b2b6-4c62-b593-a1460da3874e,DISK], DatanodeInfoWithStorage[127.0.0.1:42195,DS-0723345e-b6b5-450e-8ce6-c1086690f6f7,DISK], DatanodeInfoWithStorage[127.0.0.1:35294,DS-1dacc2fd-5546-4c70-bd04-10a9062e070b,DISK], DatanodeInfoWithStorage[127.0.0.1:42991,DS-16d27f53-2d83-4637-a12e-1e12ece928f1,DISK], DatanodeInfoWithStorage[127.0.0.1:46000,DS-0c494599-daac-4b1b-8738-5a1007f50784,DISK], DatanodeInfoWithStorage[127.0.0.1:37023,DS-a0b0dfe7-ced4-4972-8d29-68596b6cd5a3,DISK], DatanodeInfoWithStorage[127.0.0.1:34881,DS-69ed7801-b985-4e5f-8b75-0ebb60d40c45,DISK]]; indices=[0, 1, 2, 3, 4, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-581724985-172.17.0.20-1597579297168:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:33607,DS-44385b0f-b2b6-4c62-b593-a1460da3874e,DISK], DatanodeInfoWithStorage[127.0.0.1:42195,DS-0723345e-b6b5-450e-8ce6-c1086690f6f7,DISK], DatanodeInfoWithStorage[127.0.0.1:35294,DS-1dacc2fd-5546-4c70-bd04-10a9062e070b,DISK], DatanodeInfoWithStorage[127.0.0.1:42991,DS-16d27f53-2d83-4637-a12e-1e12ece928f1,DISK], DatanodeInfoWithStorage[127.0.0.1:46000,DS-0c494599-daac-4b1b-8738-5a1007f50784,DISK], DatanodeInfoWithStorage[127.0.0.1:37023,DS-a0b0dfe7-ced4-4972-8d29-68596b6cd5a3,DISK], DatanodeInfoWithStorage[127.0.0.1:34881,DS-69ed7801-b985-4e5f-8b75-0ebb60d40c45,DISK]]; indices=[0, 1, 2, 3, 4, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is -1
v1v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=3, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-242405106-172.17.0.20-1597579606893:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37344,DS-bc5ea52c-ea8f-47ab-a7bc-97e642add1f8,DISK], DatanodeInfoWithStorage[127.0.0.1:37630,DS-e88488bb-703d-4d34-9180-39c71690bf5d,DISK], DatanodeInfoWithStorage[127.0.0.1:44174,DS-35bcb9a6-7a94-4a28-9418-de21b10e5604,DISK], DatanodeInfoWithStorage[127.0.0.1:37194,DS-d5ebd887-3aed-49a0-9f73-7b7f019f4ee0,DISK], DatanodeInfoWithStorage[127.0.0.1:42607,DS-d3af7f0d-aef8-4665-add8-eb38f33aaf23,DISK], DatanodeInfoWithStorage[127.0.0.1:36376,DS-4a8c15b2-0680-4865-bcd8-2d6ed3790769,DISK], DatanodeInfoWithStorage[127.0.0.1:43603,DS-4483e25e-d010-4251-ac03-3e8149b3b61b,DISK]]; indices=[0, 1, 2, 4, 6, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-242405106-172.17.0.20-1597579606893:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37344,DS-bc5ea52c-ea8f-47ab-a7bc-97e642add1f8,DISK], DatanodeInfoWithStorage[127.0.0.1:37630,DS-e88488bb-703d-4d34-9180-39c71690bf5d,DISK], DatanodeInfoWithStorage[127.0.0.1:44174,DS-35bcb9a6-7a94-4a28-9418-de21b10e5604,DISK], DatanodeInfoWithStorage[127.0.0.1:37194,DS-d5ebd887-3aed-49a0-9f73-7b7f019f4ee0,DISK], DatanodeInfoWithStorage[127.0.0.1:42607,DS-d3af7f0d-aef8-4665-add8-eb38f33aaf23,DISK], DatanodeInfoWithStorage[127.0.0.1:36376,DS-4a8c15b2-0680-4865-bcd8-2d6ed3790769,DISK], DatanodeInfoWithStorage[127.0.0.1:43603,DS-4483e25e-d010-4251-ac03-3e8149b3b61b,DISK]]; indices=[0, 1, 2, 4, 6, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=3, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-242405106-172.17.0.20-1597579606893:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37344,DS-bc5ea52c-ea8f-47ab-a7bc-97e642add1f8,DISK], DatanodeInfoWithStorage[127.0.0.1:37630,DS-e88488bb-703d-4d34-9180-39c71690bf5d,DISK], DatanodeInfoWithStorage[127.0.0.1:44174,DS-35bcb9a6-7a94-4a28-9418-de21b10e5604,DISK], DatanodeInfoWithStorage[127.0.0.1:37194,DS-d5ebd887-3aed-49a0-9f73-7b7f019f4ee0,DISK], DatanodeInfoWithStorage[127.0.0.1:42607,DS-d3af7f0d-aef8-4665-add8-eb38f33aaf23,DISK], DatanodeInfoWithStorage[127.0.0.1:36376,DS-4a8c15b2-0680-4865-bcd8-2d6ed3790769,DISK], DatanodeInfoWithStorage[127.0.0.1:43603,DS-4483e25e-d010-4251-ac03-3e8149b3b61b,DISK]]; indices=[0, 1, 2, 4, 6, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-242405106-172.17.0.20-1597579606893:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:37344,DS-bc5ea52c-ea8f-47ab-a7bc-97e642add1f8,DISK], DatanodeInfoWithStorage[127.0.0.1:37630,DS-e88488bb-703d-4d34-9180-39c71690bf5d,DISK], DatanodeInfoWithStorage[127.0.0.1:44174,DS-35bcb9a6-7a94-4a28-9418-de21b10e5604,DISK], DatanodeInfoWithStorage[127.0.0.1:37194,DS-d5ebd887-3aed-49a0-9f73-7b7f019f4ee0,DISK], DatanodeInfoWithStorage[127.0.0.1:42607,DS-d3af7f0d-aef8-4665-add8-eb38f33aaf23,DISK], DatanodeInfoWithStorage[127.0.0.1:36376,DS-4a8c15b2-0680-4865-bcd8-2d6ed3790769,DISK], DatanodeInfoWithStorage[127.0.0.1:43603,DS-4483e25e-d010-4251-ac03-3e8149b3b61b,DISK]]; indices=[0, 1, 2, 4, 6, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is -1
v1v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-2013530418-172.17.0.20-1597579777367:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40000,DS-0e7ae3e0-8997-40ab-aa03-cc94f20f1c66,DISK], DatanodeInfoWithStorage[127.0.0.1:40587,DS-b978368e-df8f-40dd-b84e-b5e97645c317,DISK], DatanodeInfoWithStorage[127.0.0.1:36695,DS-08453b02-e477-46c9-b655-d29dca2c6847,DISK], DatanodeInfoWithStorage[127.0.0.1:44540,DS-c6a20cdd-7e9c-4815-8650-ddc5ed08a358,DISK], DatanodeInfoWithStorage[127.0.0.1:38397,DS-cb6290a8-efa6-4ccd-8815-4aea02988929,DISK], DatanodeInfoWithStorage[127.0.0.1:46477,DS-c4eb6b45-a7d8-4931-8502-40ff53d08f01,DISK]]; indices=[1, 2, 3, 4, 6, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-2013530418-172.17.0.20-1597579777367:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40000,DS-0e7ae3e0-8997-40ab-aa03-cc94f20f1c66,DISK], DatanodeInfoWithStorage[127.0.0.1:40587,DS-b978368e-df8f-40dd-b84e-b5e97645c317,DISK], DatanodeInfoWithStorage[127.0.0.1:36695,DS-08453b02-e477-46c9-b655-d29dca2c6847,DISK], DatanodeInfoWithStorage[127.0.0.1:44540,DS-c6a20cdd-7e9c-4815-8650-ddc5ed08a358,DISK], DatanodeInfoWithStorage[127.0.0.1:38397,DS-cb6290a8-efa6-4ccd-8815-4aea02988929,DISK], DatanodeInfoWithStorage[127.0.0.1:46477,DS-c4eb6b45-a7d8-4931-8502-40ff53d08f01,DISK]]; indices=[1, 2, 3, 4, 6, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-2013530418-172.17.0.20-1597579777367:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40000,DS-0e7ae3e0-8997-40ab-aa03-cc94f20f1c66,DISK], DatanodeInfoWithStorage[127.0.0.1:40587,DS-b978368e-df8f-40dd-b84e-b5e97645c317,DISK], DatanodeInfoWithStorage[127.0.0.1:36695,DS-08453b02-e477-46c9-b655-d29dca2c6847,DISK], DatanodeInfoWithStorage[127.0.0.1:44540,DS-c6a20cdd-7e9c-4815-8650-ddc5ed08a358,DISK], DatanodeInfoWithStorage[127.0.0.1:38397,DS-cb6290a8-efa6-4ccd-8815-4aea02988929,DISK], DatanodeInfoWithStorage[127.0.0.1:46477,DS-c4eb6b45-a7d8-4931-8502-40ff53d08f01,DISK]]; indices=[1, 2, 3, 4, 6, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-2013530418-172.17.0.20-1597579777367:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40000,DS-0e7ae3e0-8997-40ab-aa03-cc94f20f1c66,DISK], DatanodeInfoWithStorage[127.0.0.1:40587,DS-b978368e-df8f-40dd-b84e-b5e97645c317,DISK], DatanodeInfoWithStorage[127.0.0.1:36695,DS-08453b02-e477-46c9-b655-d29dca2c6847,DISK], DatanodeInfoWithStorage[127.0.0.1:44540,DS-c6a20cdd-7e9c-4815-8650-ddc5ed08a358,DISK], DatanodeInfoWithStorage[127.0.0.1:38397,DS-cb6290a8-efa6-4ccd-8815-4aea02988929,DISK], DatanodeInfoWithStorage[127.0.0.1:46477,DS-c4eb6b45-a7d8-4931-8502-40ff53d08f01,DISK]]; indices=[1, 2, 3, 4, 6, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is -1

Test vvMode=v2v2
tr.result is 1
v1v1 or v2v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-120433621-172.17.0.20-1597581045055:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:43498,DS-577f667e-7b86-4408-ade2-32386ecd3475,DISK], DatanodeInfoWithStorage[127.0.0.1:39861,DS-735e14b7-fb64-43c7-81d9-351a57dd8c2f,DISK], DatanodeInfoWithStorage[127.0.0.1:32935,DS-13891047-7e8f-443b-b326-5398e12fcd22,DISK], DatanodeInfoWithStorage[127.0.0.1:45062,DS-c7e93392-8df6-4421-b9ce-b4e3ff1aeb55,DISK], DatanodeInfoWithStorage[127.0.0.1:34638,DS-1f8858b7-c1ed-4084-bb81-b76ca25e17a6,DISK], DatanodeInfoWithStorage[127.0.0.1:45134,DS-3523e05d-b1b4-4c3c-b3a1-dd77555e21e8,DISK], DatanodeInfoWithStorage[127.0.0.1:41546,DS-bad6e4fb-ea7b-47ec-9fb9-4e99736a0167,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7]}];  lastLocatedBlock=LocatedStripedBlock{BP-120433621-172.17.0.20-1597581045055:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:43498,DS-577f667e-7b86-4408-ade2-32386ecd3475,DISK], DatanodeInfoWithStorage[127.0.0.1:39861,DS-735e14b7-fb64-43c7-81d9-351a57dd8c2f,DISK], DatanodeInfoWithStorage[127.0.0.1:32935,DS-13891047-7e8f-443b-b326-5398e12fcd22,DISK], DatanodeInfoWithStorage[127.0.0.1:45062,DS-c7e93392-8df6-4421-b9ce-b4e3ff1aeb55,DISK], DatanodeInfoWithStorage[127.0.0.1:34638,DS-1f8858b7-c1ed-4084-bb81-b76ca25e17a6,DISK], DatanodeInfoWithStorage[127.0.0.1:45134,DS-3523e05d-b1b4-4c3c-b3a1-dd77555e21e8,DISK], DatanodeInfoWithStorage[127.0.0.1:41546,DS-bad6e4fb-ea7b-47ec-9fb9-4e99736a0167,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-120433621-172.17.0.20-1597581045055:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:43498,DS-577f667e-7b86-4408-ade2-32386ecd3475,DISK], DatanodeInfoWithStorage[127.0.0.1:39861,DS-735e14b7-fb64-43c7-81d9-351a57dd8c2f,DISK], DatanodeInfoWithStorage[127.0.0.1:32935,DS-13891047-7e8f-443b-b326-5398e12fcd22,DISK], DatanodeInfoWithStorage[127.0.0.1:45062,DS-c7e93392-8df6-4421-b9ce-b4e3ff1aeb55,DISK], DatanodeInfoWithStorage[127.0.0.1:34638,DS-1f8858b7-c1ed-4084-bb81-b76ca25e17a6,DISK], DatanodeInfoWithStorage[127.0.0.1:45134,DS-3523e05d-b1b4-4c3c-b3a1-dd77555e21e8,DISK], DatanodeInfoWithStorage[127.0.0.1:41546,DS-bad6e4fb-ea7b-47ec-9fb9-4e99736a0167,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7]}];  lastLocatedBlock=LocatedStripedBlock{BP-120433621-172.17.0.20-1597581045055:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:43498,DS-577f667e-7b86-4408-ade2-32386ecd3475,DISK], DatanodeInfoWithStorage[127.0.0.1:39861,DS-735e14b7-fb64-43c7-81d9-351a57dd8c2f,DISK], DatanodeInfoWithStorage[127.0.0.1:32935,DS-13891047-7e8f-443b-b326-5398e12fcd22,DISK], DatanodeInfoWithStorage[127.0.0.1:45062,DS-c7e93392-8df6-4421-b9ce-b4e3ff1aeb55,DISK], DatanodeInfoWithStorage[127.0.0.1:34638,DS-1f8858b7-c1ed-4084-bb81-b76ca25e17a6,DISK], DatanodeInfoWithStorage[127.0.0.1:45134,DS-3523e05d-b1b4-4c3c-b3a1-dd77555e21e8,DISK], DatanodeInfoWithStorage[127.0.0.1:41546,DS-bad6e4fb-ea7b-47ec-9fb9-4e99736a0167,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readParityChunks(StripeReader.java:211)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:378)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v2
tr.result is -1
v1v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=0, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-1542917439-172.17.0.20-1597581143051:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40300,DS-3492ee16-ffe7-45a0-9cae-69766c45cc32,DISK], DatanodeInfoWithStorage[127.0.0.1:37058,DS-9a4c08b2-6430-43de-92e1-705e08c17d61,DISK], DatanodeInfoWithStorage[127.0.0.1:35090,DS-bead6a76-29f1-42ac-b63c-7b1a9aed6dbc,DISK], DatanodeInfoWithStorage[127.0.0.1:43146,DS-9e053f53-1245-4218-b37b-04a929f604c7,DISK], DatanodeInfoWithStorage[127.0.0.1:46043,DS-b4058190-e198-4265-9f79-28ed989cba44,DISK], DatanodeInfoWithStorage[127.0.0.1:41056,DS-c0fce92a-1f7c-4c8a-9ee4-aed2259ac520,DISK]]; indices=[0, 1, 3, 5, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-1542917439-172.17.0.20-1597581143051:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40300,DS-3492ee16-ffe7-45a0-9cae-69766c45cc32,DISK], DatanodeInfoWithStorage[127.0.0.1:37058,DS-9a4c08b2-6430-43de-92e1-705e08c17d61,DISK], DatanodeInfoWithStorage[127.0.0.1:35090,DS-bead6a76-29f1-42ac-b63c-7b1a9aed6dbc,DISK], DatanodeInfoWithStorage[127.0.0.1:43146,DS-9e053f53-1245-4218-b37b-04a929f604c7,DISK], DatanodeInfoWithStorage[127.0.0.1:46043,DS-b4058190-e198-4265-9f79-28ed989cba44,DISK], DatanodeInfoWithStorage[127.0.0.1:41056,DS-c0fce92a-1f7c-4c8a-9ee4-aed2259ac520,DISK]]; indices=[0, 1, 3, 5, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=0, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-1542917439-172.17.0.20-1597581143051:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40300,DS-3492ee16-ffe7-45a0-9cae-69766c45cc32,DISK], DatanodeInfoWithStorage[127.0.0.1:37058,DS-9a4c08b2-6430-43de-92e1-705e08c17d61,DISK], DatanodeInfoWithStorage[127.0.0.1:35090,DS-bead6a76-29f1-42ac-b63c-7b1a9aed6dbc,DISK], DatanodeInfoWithStorage[127.0.0.1:43146,DS-9e053f53-1245-4218-b37b-04a929f604c7,DISK], DatanodeInfoWithStorage[127.0.0.1:46043,DS-b4058190-e198-4265-9f79-28ed989cba44,DISK], DatanodeInfoWithStorage[127.0.0.1:41056,DS-c0fce92a-1f7c-4c8a-9ee4-aed2259ac520,DISK]]; indices=[0, 1, 3, 5, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-1542917439-172.17.0.20-1597581143051:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40300,DS-3492ee16-ffe7-45a0-9cae-69766c45cc32,DISK], DatanodeInfoWithStorage[127.0.0.1:37058,DS-9a4c08b2-6430-43de-92e1-705e08c17d61,DISK], DatanodeInfoWithStorage[127.0.0.1:35090,DS-bead6a76-29f1-42ac-b63c-7b1a9aed6dbc,DISK], DatanodeInfoWithStorage[127.0.0.1:43146,DS-9e053f53-1245-4218-b37b-04a929f604c7,DISK], DatanodeInfoWithStorage[127.0.0.1:46043,DS-b4058190-e198-4265-9f79-28ed989cba44,DISK], DatanodeInfoWithStorage[127.0.0.1:41056,DS-c0fce92a-1f7c-4c8a-9ee4-aed2259ac520,DISK]]; indices=[0, 1, 3, 5, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is -1
v1v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=3, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-2114421957-172.17.0.20-1597581316025:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45194,DS-0b2edcfe-8c91-4daf-8853-cf89b082a757,DISK], DatanodeInfoWithStorage[127.0.0.1:38271,DS-ba9c3966-35b3-4f2f-a1a8-293fc7803aae,DISK], DatanodeInfoWithStorage[127.0.0.1:39196,DS-0d3169c2-e51c-4c52-8440-7539ef75a6f9,DISK], DatanodeInfoWithStorage[127.0.0.1:44104,DS-820a7714-ed92-4480-bbf6-6571c537ef18,DISK], DatanodeInfoWithStorage[127.0.0.1:34293,DS-ac32fa86-0c56-4000-b49c-3361c5b01f4c,DISK], DatanodeInfoWithStorage[127.0.0.1:46775,DS-223946be-b75a-4343-b788-1192f63e2b7b,DISK]]; indices=[0, 3, 5, 6, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-2114421957-172.17.0.20-1597581316025:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45194,DS-0b2edcfe-8c91-4daf-8853-cf89b082a757,DISK], DatanodeInfoWithStorage[127.0.0.1:38271,DS-ba9c3966-35b3-4f2f-a1a8-293fc7803aae,DISK], DatanodeInfoWithStorage[127.0.0.1:39196,DS-0d3169c2-e51c-4c52-8440-7539ef75a6f9,DISK], DatanodeInfoWithStorage[127.0.0.1:44104,DS-820a7714-ed92-4480-bbf6-6571c537ef18,DISK], DatanodeInfoWithStorage[127.0.0.1:34293,DS-ac32fa86-0c56-4000-b49c-3361c5b01f4c,DISK], DatanodeInfoWithStorage[127.0.0.1:46775,DS-223946be-b75a-4343-b788-1192f63e2b7b,DISK]]; indices=[0, 3, 5, 6, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=3, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-2114421957-172.17.0.20-1597581316025:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45194,DS-0b2edcfe-8c91-4daf-8853-cf89b082a757,DISK], DatanodeInfoWithStorage[127.0.0.1:38271,DS-ba9c3966-35b3-4f2f-a1a8-293fc7803aae,DISK], DatanodeInfoWithStorage[127.0.0.1:39196,DS-0d3169c2-e51c-4c52-8440-7539ef75a6f9,DISK], DatanodeInfoWithStorage[127.0.0.1:44104,DS-820a7714-ed92-4480-bbf6-6571c537ef18,DISK], DatanodeInfoWithStorage[127.0.0.1:34293,DS-ac32fa86-0c56-4000-b49c-3361c5b01f4c,DISK], DatanodeInfoWithStorage[127.0.0.1:46775,DS-223946be-b75a-4343-b788-1192f63e2b7b,DISK]]; indices=[0, 3, 5, 6, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-2114421957-172.17.0.20-1597581316025:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45194,DS-0b2edcfe-8c91-4daf-8853-cf89b082a757,DISK], DatanodeInfoWithStorage[127.0.0.1:38271,DS-ba9c3966-35b3-4f2f-a1a8-293fc7803aae,DISK], DatanodeInfoWithStorage[127.0.0.1:39196,DS-0d3169c2-e51c-4c52-8440-7539ef75a6f9,DISK], DatanodeInfoWithStorage[127.0.0.1:44104,DS-820a7714-ed92-4480-bbf6-6571c537ef18,DISK], DatanodeInfoWithStorage[127.0.0.1:34293,DS-ac32fa86-0c56-4000-b49c-3361c5b01f4c,DISK], DatanodeInfoWithStorage[127.0.0.1:46775,DS-223946be-b75a-4343-b788-1192f63e2b7b,DISK]]; indices=[0, 3, 5, 6, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v1
tr.result is -1

Test vvMode=v2v2
tr.result is 1
v1v1 or v2v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: Invalid buffer found, not allowing null
stackTrace: org.apache.hadoop.HadoopIllegalArgumentException: Invalid buffer found, not allowing null
	at org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState.checkOutputBuffers(ByteBufferDecodingState.java:132)
	at org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState.<init>(ByteBufferDecodingState.java:48)
	at org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder.decode(RawErasureDecoder.java:86)
	at org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder.decode(RawErasureDecoder.java:170)
	at org.apache.hadoop.hdfs.StripeReader.decodeAndFillBuffer(StripeReader.java:433)
	at org.apache.hadoop.hdfs.StatefulStripeReader.decode(StatefulStripeReader.java:94)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:390)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.readOneStripe(DFSStripedInputStream.java:326)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.readWithStrategy(DFSStripedInputStream.java:419)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:829)
	at java.io.DataInputStream.read(DataInputStream.java:149)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyStatefulRead(StripedFileTestUtil.java:126)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:141)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is -1

Test vvMode=v2v2
tr.result is 1
v1v1 or v2v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: Invalid buffer found, not allowing null
stackTrace: org.apache.hadoop.HadoopIllegalArgumentException: Invalid buffer found, not allowing null
	at org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState.checkOutputBuffers(ByteBufferDecodingState.java:132)
	at org.apache.hadoop.io.erasurecode.rawcoder.ByteBufferDecodingState.<init>(ByteBufferDecodingState.java:48)
	at org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder.decode(RawErasureDecoder.java:86)
	at org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder.decode(RawErasureDecoder.java:170)
	at org.apache.hadoop.hdfs.StripeReader.decodeAndFillBuffer(StripeReader.java:433)
	at org.apache.hadoop.hdfs.StatefulStripeReader.decode(StatefulStripeReader.java:94)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:390)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.readOneStripe(DFSStripedInputStream.java:326)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.readWithStrategy(DFSStripedInputStream.java:419)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:829)
	at java.io.DataInputStream.read(DataInputStream.java:149)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyStatefulRead(StripedFileTestUtil.java:126)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:141)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is -1
v1v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-387047732-172.17.0.20-1597582329154:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40903,DS-bffcb3ea-974c-49ee-a98b-3465c695e5cc,DISK], DatanodeInfoWithStorage[127.0.0.1:41023,DS-74f2d227-e041-478a-a588-3ec8a1824e48,DISK], DatanodeInfoWithStorage[127.0.0.1:33128,DS-6b5b5d4e-9c42-4049-8552-7669a3894fdf,DISK], DatanodeInfoWithStorage[127.0.0.1:42603,DS-c670369a-09e5-4bf3-ae1b-0341c1cc782e,DISK], DatanodeInfoWithStorage[127.0.0.1:40925,DS-a0aab2bb-e9ea-4263-b178-936ac6d1b7f9,DISK], DatanodeInfoWithStorage[127.0.0.1:41391,DS-d28ebf98-d934-44bb-bdde-e4fd894dedce,DISK], DatanodeInfoWithStorage[127.0.0.1:39700,DS-7328b3ff-3472-47e7-9508-cc36bf293897,DISK], DatanodeInfoWithStorage[127.0.0.1:35333,DS-f725134b-1623-4f19-91ca-fc0c94097c8a,DISK]]; indices=[0, 1, 2, 3, 4, 6, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-387047732-172.17.0.20-1597582329154:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40903,DS-bffcb3ea-974c-49ee-a98b-3465c695e5cc,DISK], DatanodeInfoWithStorage[127.0.0.1:41023,DS-74f2d227-e041-478a-a588-3ec8a1824e48,DISK], DatanodeInfoWithStorage[127.0.0.1:33128,DS-6b5b5d4e-9c42-4049-8552-7669a3894fdf,DISK], DatanodeInfoWithStorage[127.0.0.1:42603,DS-c670369a-09e5-4bf3-ae1b-0341c1cc782e,DISK], DatanodeInfoWithStorage[127.0.0.1:40925,DS-a0aab2bb-e9ea-4263-b178-936ac6d1b7f9,DISK], DatanodeInfoWithStorage[127.0.0.1:41391,DS-d28ebf98-d934-44bb-bdde-e4fd894dedce,DISK], DatanodeInfoWithStorage[127.0.0.1:39700,DS-7328b3ff-3472-47e7-9508-cc36bf293897,DISK], DatanodeInfoWithStorage[127.0.0.1:35333,DS-f725134b-1623-4f19-91ca-fc0c94097c8a,DISK]]; indices=[0, 1, 2, 3, 4, 6, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-387047732-172.17.0.20-1597582329154:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40903,DS-bffcb3ea-974c-49ee-a98b-3465c695e5cc,DISK], DatanodeInfoWithStorage[127.0.0.1:41023,DS-74f2d227-e041-478a-a588-3ec8a1824e48,DISK], DatanodeInfoWithStorage[127.0.0.1:33128,DS-6b5b5d4e-9c42-4049-8552-7669a3894fdf,DISK], DatanodeInfoWithStorage[127.0.0.1:42603,DS-c670369a-09e5-4bf3-ae1b-0341c1cc782e,DISK], DatanodeInfoWithStorage[127.0.0.1:40925,DS-a0aab2bb-e9ea-4263-b178-936ac6d1b7f9,DISK], DatanodeInfoWithStorage[127.0.0.1:41391,DS-d28ebf98-d934-44bb-bdde-e4fd894dedce,DISK], DatanodeInfoWithStorage[127.0.0.1:39700,DS-7328b3ff-3472-47e7-9508-cc36bf293897,DISK], DatanodeInfoWithStorage[127.0.0.1:35333,DS-f725134b-1623-4f19-91ca-fc0c94097c8a,DISK]]; indices=[0, 1, 2, 3, 4, 6, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-387047732-172.17.0.20-1597582329154:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:40903,DS-bffcb3ea-974c-49ee-a98b-3465c695e5cc,DISK], DatanodeInfoWithStorage[127.0.0.1:41023,DS-74f2d227-e041-478a-a588-3ec8a1824e48,DISK], DatanodeInfoWithStorage[127.0.0.1:33128,DS-6b5b5d4e-9c42-4049-8552-7669a3894fdf,DISK], DatanodeInfoWithStorage[127.0.0.1:42603,DS-c670369a-09e5-4bf3-ae1b-0341c1cc782e,DISK], DatanodeInfoWithStorage[127.0.0.1:40925,DS-a0aab2bb-e9ea-4263-b178-936ac6d1b7f9,DISK], DatanodeInfoWithStorage[127.0.0.1:41391,DS-d28ebf98-d934-44bb-bdde-e4fd894dedce,DISK], DatanodeInfoWithStorage[127.0.0.1:39700,DS-7328b3ff-3472-47e7-9508-cc36bf293897,DISK], DatanodeInfoWithStorage[127.0.0.1:35333,DS-f725134b-1623-4f19-91ca-fc0c94097c8a,DISK]]; indices=[0, 1, 2, 3, 4, 6, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is -1
v1v2 test failed !!!
reconf_parameter: dfs.blockreport.incremental.intervalMsec
component: hdfs:DataNode
v1: 10000
v2: 0
testProject: hdfs
unitTest: org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData#testReadCorruptedData[2]
reconfPoint: -2
result: -1
failureMessage: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-211765387-172.17.0.20-1597583122862:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45450,DS-f9f05b4c-70de-4de5-9773-d79115359c40,DISK], DatanodeInfoWithStorage[127.0.0.1:46048,DS-7ca80844-75ff-4114-8862-39f25b7dfb9b,DISK], DatanodeInfoWithStorage[127.0.0.1:42573,DS-82a8bbd0-1d8f-48de-92c8-76193b4b84aa,DISK], DatanodeInfoWithStorage[127.0.0.1:33249,DS-2dc67531-1b4c-4982-87a0-f38fdd3e8c51,DISK], DatanodeInfoWithStorage[127.0.0.1:43286,DS-30660b33-108e-49ae-8360-a15e327c49b6,DISK], DatanodeInfoWithStorage[127.0.0.1:37512,DS-5dbd9361-2adc-4b9b-8891-deb489e239b4,DISK], DatanodeInfoWithStorage[127.0.0.1:36951,DS-906331fa-7b2e-4f08-aeb2-e581bf0372ac,DISK], DatanodeInfoWithStorage[127.0.0.1:43526,DS-bd4ac8be-f9bd-4eb9-b4dc-7eef0a5e5f91,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-211765387-172.17.0.20-1597583122862:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45450,DS-f9f05b4c-70de-4de5-9773-d79115359c40,DISK], DatanodeInfoWithStorage[127.0.0.1:46048,DS-7ca80844-75ff-4114-8862-39f25b7dfb9b,DISK], DatanodeInfoWithStorage[127.0.0.1:42573,DS-82a8bbd0-1d8f-48de-92c8-76193b4b84aa,DISK], DatanodeInfoWithStorage[127.0.0.1:33249,DS-2dc67531-1b4c-4982-87a0-f38fdd3e8c51,DISK], DatanodeInfoWithStorage[127.0.0.1:43286,DS-30660b33-108e-49ae-8360-a15e327c49b6,DISK], DatanodeInfoWithStorage[127.0.0.1:37512,DS-5dbd9361-2adc-4b9b-8891-deb489e239b4,DISK], DatanodeInfoWithStorage[127.0.0.1:36951,DS-906331fa-7b2e-4f08-aeb2-e581bf0372ac,DISK], DatanodeInfoWithStorage[127.0.0.1:43526,DS-bd4ac8be-f9bd-4eb9-b4dc-7eef0a5e5f91,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
stackTrace: java.io.IOException: 4 missing blocks, the stripe is: AlignedStripe(Offset=0, length=4194181, fetchedChunksNum=5, missingChunksNum=4); locatedBlocks is: LocatedBlocks{;  fileLength=25165701;  underConstruction=false;  blocks=[LocatedStripedBlock{BP-211765387-172.17.0.20-1597583122862:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45450,DS-f9f05b4c-70de-4de5-9773-d79115359c40,DISK], DatanodeInfoWithStorage[127.0.0.1:46048,DS-7ca80844-75ff-4114-8862-39f25b7dfb9b,DISK], DatanodeInfoWithStorage[127.0.0.1:42573,DS-82a8bbd0-1d8f-48de-92c8-76193b4b84aa,DISK], DatanodeInfoWithStorage[127.0.0.1:33249,DS-2dc67531-1b4c-4982-87a0-f38fdd3e8c51,DISK], DatanodeInfoWithStorage[127.0.0.1:43286,DS-30660b33-108e-49ae-8360-a15e327c49b6,DISK], DatanodeInfoWithStorage[127.0.0.1:37512,DS-5dbd9361-2adc-4b9b-8891-deb489e239b4,DISK], DatanodeInfoWithStorage[127.0.0.1:36951,DS-906331fa-7b2e-4f08-aeb2-e581bf0372ac,DISK], DatanodeInfoWithStorage[127.0.0.1:43526,DS-bd4ac8be-f9bd-4eb9-b4dc-7eef0a5e5f91,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7, 8]}];  lastLocatedBlock=LocatedStripedBlock{BP-211765387-172.17.0.20-1597583122862:blk_-9223372036854775792_1001; getBlockSize()=25165701; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[127.0.0.1:45450,DS-f9f05b4c-70de-4de5-9773-d79115359c40,DISK], DatanodeInfoWithStorage[127.0.0.1:46048,DS-7ca80844-75ff-4114-8862-39f25b7dfb9b,DISK], DatanodeInfoWithStorage[127.0.0.1:42573,DS-82a8bbd0-1d8f-48de-92c8-76193b4b84aa,DISK], DatanodeInfoWithStorage[127.0.0.1:33249,DS-2dc67531-1b4c-4982-87a0-f38fdd3e8c51,DISK], DatanodeInfoWithStorage[127.0.0.1:43286,DS-30660b33-108e-49ae-8360-a15e327c49b6,DISK], DatanodeInfoWithStorage[127.0.0.1:37512,DS-5dbd9361-2adc-4b9b-8891-deb489e239b4,DISK], DatanodeInfoWithStorage[127.0.0.1:36951,DS-906331fa-7b2e-4f08-aeb2-e581bf0372ac,DISK], DatanodeInfoWithStorage[127.0.0.1:43526,DS-bd4ac8be-f9bd-4eb9-b4dc-7eef0a5e5f91,DISK]]; indices=[0, 1, 2, 3, 4, 5, 7, 8]};  isLastBlockComplete=true;  ecPolicy=ErasureCodingPolicy=[Name=RS-6-3-1024k, Schema=[ECSchema=[Codec=rs, numDataUnits=6, numParityUnits=3]], CellSize=1048576, Id=1]}
	at org.apache.hadoop.hdfs.StripeReader.checkMissingBlocks(StripeReader.java:179)
	at org.apache.hadoop.hdfs.StripeReader.readStripe(StripeReader.java:375)
	at org.apache.hadoop.hdfs.DFSStripedInputStream.fetchBlockByteRange(DFSStripedInputStream.java:507)
	at org.apache.hadoop.hdfs.DFSInputStream.pread(DFSInputStream.java:1360)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:1324)
	at org.apache.hadoop.fs.FSInputStream.readFully(FSInputStream.java:121)
	at org.apache.hadoop.fs.FSDataInputStream.readFully(FSDataInputStream.java:111)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:106)
	at org.apache.hadoop.hdfs.StripedFileTestUtil.verifyPread(StripedFileTestUtil.java:86)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.verifyRead(ReadStripedFileWithDecodingHelper.java:139)
	at org.apache.hadoop.hdfs.ReadStripedFileWithDecodingHelper.testReadWithBlockCorrupted(ReadStripedFileWithDecodingHelper.java:221)
	at org.apache.hadoop.hdfs.TestReadStripedFileWithDecodingCorruptData.testReadCorruptedData(TestReadStripedFileWithDecodingCorruptData.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)



Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1

Test vvMode=v1v2
tr.result is 1

Test vvMode=v1v1
tr.result is 1

Test vvMode=v2v2
tr.result is 1
v1v2 failed with probability 7 out of 50
v1v1v2v2 failed with probability 5 out of 50
result: might be true error
Total execution time in seconds : 8728
