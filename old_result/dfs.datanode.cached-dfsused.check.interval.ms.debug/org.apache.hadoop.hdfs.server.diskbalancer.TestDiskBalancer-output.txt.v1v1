msx-listener test started org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer#testDiskBalancerEndToEnd
msx-listener unitTestCounterInClass = 0
msx-debug TestDiskBalancer testDiskBalancerEndToEnd
msx-reconfagent reconf_vvmode=v1v1, reconf_parameter=dfs.datanode.cached-dfsused.check.interval.ms, reconf_component=hdfs:DataNode, reconf_v1=100, reconf_v2=600000, reconf_point=4
2020-06-25 02:14:57,189 [main] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:<init>(493)) - starting cluster: numNameNodes=1, numDataNodes=1
2020-06-25 02:14:57,635 [main] WARN  util.NativeCodeLoader (NativeCodeLoader.java:<clinit>(60)) - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
Formatting using clusterid: testClusterID
2020-06-25 02:14:57,726 [main] INFO  namenode.FSEditLog (FSEditLog.java:newInstance(229)) - Edit logging is async:true
2020-06-25 02:14:57,735 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(755)) - KeyProvider: null
2020-06-25 02:14:57,736 [main] INFO  namenode.FSNamesystem (FSNamesystemLock.java:<init>(123)) - fsLock is fair: true
2020-06-25 02:14:57,737 [main] INFO  namenode.FSNamesystem (FSNamesystemLock.java:<init>(141)) - Detailed lock hold time metrics enabled: false
2020-06-25 02:14:57,742 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(780)) - fsOwner             = root (auth:SIMPLE)
2020-06-25 02:14:57,742 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(781)) - supergroup          = supergroup
2020-06-25 02:14:57,742 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(782)) - isPermissionEnabled = true
2020-06-25 02:14:57,743 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(793)) - HA Enabled: false
2020-06-25 02:14:57,779 [main] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:14:57,782 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - hadoop.configured.node.mapping is deprecated. Instead, use net.topology.configured.node.mapping
2020-06-25 02:14:57,783 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:57,783 [main] INFO  blockmanagement.DatanodeManager (DatanodeManager.java:<init>(303)) - dfs.block.invalidate.limit: configured=1000, counted=20, effected=1000
2020-06-25 02:14:57,783 [main] INFO  blockmanagement.DatanodeManager (DatanodeManager.java:<init>(311)) - dfs.namenode.datanode.registration.ip-hostname-check=true
2020-06-25 02:14:57,783 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:57,788 [main] INFO  blockmanagement.BlockManager (InvalidateBlocks.java:printBlockDeletionTime(79)) - dfs.namenode.startup.delay.block.deletion.sec is set to 000:00:00:00.000
2020-06-25 02:14:57,788 [main] INFO  blockmanagement.BlockManager (InvalidateBlocks.java:printBlockDeletionTime(85)) - The block deletion will start around 2020 Jun 25 02:14:57
2020-06-25 02:14:57,790 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map BlocksMap
2020-06-25 02:14:57,790 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:57,791 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 2.0% max memory 1.9 GB = 39.3 MB
2020-06-25 02:14:57,791 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^22 = 4194304 entries
2020-06-25 02:14:57,804 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:57,805 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:57,807 [main] INFO  blockmanagement.BlockManager (BlockManager.java:createSPSManager(5183)) - Storage policy satisfier is disabled
2020-06-25 02:14:57,808 [main] INFO  blockmanagement.BlockManager (BlockManager.java:createBlockTokenSecretManager(595)) - dfs.block.access.token.enable = false
2020-06-25 02:14:57,809 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:57,813 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.namenode.safemode.extension(0) assuming MILLISECONDS
2020-06-25 02:14:57,813 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(161)) - dfs.namenode.safemode.threshold-pct = 0.9990000128746033
2020-06-25 02:14:57,813 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(162)) - dfs.namenode.safemode.min.datanodes = 0
2020-06-25 02:14:57,813 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(164)) - dfs.namenode.safemode.extension = 0
2020-06-25 02:14:57,814 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(581)) - defaultReplication         = 1
2020-06-25 02:14:57,814 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(582)) - maxReplication             = 512
2020-06-25 02:14:57,814 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(583)) - minReplication             = 1
2020-06-25 02:14:57,814 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(584)) - maxReplicationStreams      = 2
2020-06-25 02:14:57,815 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(585)) - redundancyRecheckInterval  = 3000ms
2020-06-25 02:14:57,815 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(586)) - encryptDataTransfer        = false
2020-06-25 02:14:57,815 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(587)) - maxNumBlocksToLog          = 1000
2020-06-25 02:14:57,837 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - GLOBAL serial map: bits=29 maxEntries=536870911
2020-06-25 02:14:57,838 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - USER serial map: bits=24 maxEntries=16777215
2020-06-25 02:14:57,838 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - GROUP serial map: bits=24 maxEntries=16777215
2020-06-25 02:14:57,838 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - XATTR serial map: bits=24 maxEntries=16777215
2020-06-25 02:14:57,849 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map INodeMap
2020-06-25 02:14:57,849 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:57,849 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 1.0% max memory 1.9 GB = 19.6 MB
2020-06-25 02:14:57,849 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^21 = 2097152 entries
2020-06-25 02:14:57,855 [main] INFO  namenode.FSDirectory (FSDirectory.java:<init>(290)) - ACLs enabled? false
2020-06-25 02:14:57,855 [main] INFO  namenode.FSDirectory (FSDirectory.java:<init>(294)) - POSIX ACL inheritance enabled? true
2020-06-25 02:14:57,855 [main] INFO  namenode.FSDirectory (FSDirectory.java:<init>(298)) - XAttrs enabled? true
2020-06-25 02:14:57,855 [main] INFO  namenode.NameNode (FSDirectory.java:<init>(362)) - Caching file names occurring more than 10 times
2020-06-25 02:14:57,859 [main] INFO  snapshot.SnapshotManager (SnapshotManager.java:<init>(124)) - Loaded config captureOpenFiles: false, skipCaptureAccessTimeOnlyChange: false, snapshotDiffAllowSnapRootDescendant: true, maxSnapshotLimit: 65536
2020-06-25 02:14:57,861 [main] INFO  snapshot.SnapshotManager (DirectoryDiffListFactory.java:init(43)) - SkipList is disabled
2020-06-25 02:14:57,864 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map cachedBlocks
2020-06-25 02:14:57,865 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:57,865 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 0.25% max memory 1.9 GB = 4.9 MB
2020-06-25 02:14:57,865 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^19 = 524288 entries
2020-06-25 02:14:57,872 [main] INFO  metrics.TopMetrics (TopMetrics.java:logConf(76)) - NNTop conf: dfs.namenode.top.window.num.buckets = 10
2020-06-25 02:14:57,873 [main] INFO  metrics.TopMetrics (TopMetrics.java:logConf(78)) - NNTop conf: dfs.namenode.top.num.users = 10
2020-06-25 02:14:57,873 [main] INFO  metrics.TopMetrics (TopMetrics.java:logConf(80)) - NNTop conf: dfs.namenode.top.windows.minutes = 1,5,25
2020-06-25 02:14:57,876 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:initRetryCache(996)) - Retry cache on namenode is enabled
2020-06-25 02:14:57,876 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:initRetryCache(1004)) - Retry cache will use 0.03 of total heap and retry cache entry expiry time is 600000 millis
2020-06-25 02:14:57,878 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map NameNodeRetryCache
2020-06-25 02:14:57,878 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:57,878 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 0.029999999329447746% max memory 1.9 GB = 603.0 KB
2020-06-25 02:14:57,878 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^16 = 65536 entries
2020-06-25 02:14:57,902 [main] INFO  namenode.FSImage (FSImage.java:format(185)) - Allocated new BlockPoolId: BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:14:57,912 [main] INFO  common.Storage (NNStorage.java:format(595)) - Storage directory /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1 has been successfully formatted.
2020-06-25 02:14:57,914 [main] INFO  common.Storage (NNStorage.java:format(595)) - Storage directory /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2 has been successfully formatted.
2020-06-25 02:14:57,939 [FSImageSaver for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1 of type IMAGE_AND_EDITS] INFO  namenode.FSImageFormatProtobuf (FSImageFormatProtobuf.java:save(512)) - Saving image file /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/current/fsimage.ckpt_0000000000000000000 using no compression
2020-06-25 02:14:57,939 [FSImageSaver for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2 of type IMAGE_AND_EDITS] INFO  namenode.FSImageFormatProtobuf (FSImageFormatProtobuf.java:save(512)) - Saving image file /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2/current/fsimage.ckpt_0000000000000000000 using no compression
2020-06-25 02:14:58,040 [FSImageSaver for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2 of type IMAGE_AND_EDITS] INFO  namenode.FSImageFormatProtobuf (FSImageFormatProtobuf.java:save(516)) - Image file /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2/current/fsimage.ckpt_0000000000000000000 of size 399 bytes saved in 0 seconds .
2020-06-25 02:14:58,040 [FSImageSaver for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1 of type IMAGE_AND_EDITS] INFO  namenode.FSImageFormatProtobuf (FSImageFormatProtobuf.java:save(516)) - Image file /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/current/fsimage.ckpt_0000000000000000000 of size 399 bytes saved in 0 seconds .
2020-06-25 02:14:58,054 [main] INFO  namenode.NNStorageRetentionManager (NNStorageRetentionManager.java:getImageTxIdToRetain(203)) - Going to retain 1 images with txid >= 0
2020-06-25 02:14:58,057 [main] INFO  namenode.NameNode (NameNode.java:createNameNode(1640)) - createNameNode []
2020-06-25 02:14:58,127 [main] INFO  impl.MetricsConfig (MetricsConfig.java:loadFirst(118)) - Loaded properties from hadoop-metrics2.properties
2020-06-25 02:14:58,312 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:startTimer(374)) - Scheduled Metric snapshot period at 0 second(s).
2020-06-25 02:14:58,313 [main] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:start(191)) - NameNode metrics system started
msx-reconfagent conf 1610525991 itself is unique for hdfs:NameNode 752684363
msx-reconfagent performReconf for comoponent hdfs:NameNode 752684363 uniqueConf 1610525991 originConf 1610525991
msx-reconfagent hdfs:NameNode init 752684363, vvmode is v1v1. Set value as v1 100
2020-06-25 02:14:58,347 [main] INFO  namenode.NameNodeUtils (NameNodeUtils.java:getClientNamenodeAddress(79)) - fs.defaultFS is hdfs://127.0.0.1:0
2020-06-25 02:14:58,378 [org.apache.hadoop.util.JvmPauseMonitor$Monitor@ea6147e] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(188)) - Starting JVM pause monitor
2020-06-25 02:14:58,390 [main] INFO  hdfs.DFSUtil (DFSUtil.java:httpServerTemplateForNNAndJN(1641)) - Starting Web-server for hdfs at: http://localhost:0
2020-06-25 02:14:58,394 [main] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:14:58,405 [main] INFO  util.log (Log.java:initialized(192)) - Logging initialized @1781ms
2020-06-25 02:14:58,502 [main] INFO  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets.
2020-06-25 02:14:58,505 [main] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(81)) - Http request log for http.requests.namenode is not defined
2020-06-25 02:14:58,505 [main] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:14:58,511 [main] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(990)) - Added global filter 'safety' (class=org.apache.hadoop.http.HttpServer2$QuotingInputFilter)
2020-06-25 02:14:58,513 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(963)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context hdfs
2020-06-25 02:14:58,513 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2020-06-25 02:14:58,513 [main] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2020-06-25 02:14:58,534 [main] INFO  http.HttpServer2 (NameNodeHttpServer.java:initWebHdfs(102)) - Added filter 'org.apache.hadoop.hdfs.web.AuthFilter' (class=org.apache.hadoop.hdfs.web.AuthFilter)
2020-06-25 02:14:58,534 [main] INFO  http.HttpServer2 (HttpServer2.java:addJerseyResourcePackage(806)) - addJerseyResourcePackage: packageName=org.apache.hadoop.hdfs.server.namenode.web.resources;org.apache.hadoop.hdfs.web.resources, pathSpec=/webhdfs/v1/*
2020-06-25 02:14:58,540 [main] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1206)) - Jetty bound to port 38762
2020-06-25 02:14:58,542 [main] INFO  server.Server (Server.java:doStart(351)) - jetty-9.3.24.v20180605, build timestamp: 2018-06-05T17:11:56Z, git hash: 84205aa28f11a4f31f2a3b86d1bba2cc8ab69827
2020-06-25 02:14:58,585 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@71075444{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,AVAILABLE}
2020-06-25 02:14:58,586 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@6b695b06{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,AVAILABLE}
2020-06-25 02:14:58,630 [main] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.w.WebAppContext@2e570ded{/,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/hdfs/,AVAILABLE}{/hdfs}
2020-06-25 02:14:58,640 [main] INFO  server.AbstractConnector (AbstractConnector.java:doStart(278)) - Started ServerConnector@51bf5add{HTTP/1.1,[http/1.1]}{localhost:38762}
2020-06-25 02:14:58,640 [main] INFO  server.Server (Server.java:doStart(419)) - Started @2016ms
2020-06-25 02:14:58,648 [main] INFO  namenode.FSEditLog (FSEditLog.java:newInstance(229)) - Edit logging is async:true
2020-06-25 02:14:58,649 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(755)) - KeyProvider: null
2020-06-25 02:14:58,649 [main] INFO  namenode.FSNamesystem (FSNamesystemLock.java:<init>(123)) - fsLock is fair: true
2020-06-25 02:14:58,649 [main] INFO  namenode.FSNamesystem (FSNamesystemLock.java:<init>(141)) - Detailed lock hold time metrics enabled: false
2020-06-25 02:14:58,649 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(780)) - fsOwner             = root (auth:SIMPLE)
2020-06-25 02:14:58,649 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(781)) - supergroup          = supergroup
2020-06-25 02:14:58,650 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(782)) - isPermissionEnabled = true
2020-06-25 02:14:58,650 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:<init>(793)) - HA Enabled: false
2020-06-25 02:14:58,650 [main] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:14:58,651 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:58,651 [main] INFO  blockmanagement.DatanodeManager (DatanodeManager.java:<init>(303)) - dfs.block.invalidate.limit: configured=1000, counted=20, effected=1000
2020-06-25 02:14:58,651 [main] INFO  blockmanagement.DatanodeManager (DatanodeManager.java:<init>(311)) - dfs.namenode.datanode.registration.ip-hostname-check=true
2020-06-25 02:14:58,651 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:58,652 [main] INFO  blockmanagement.BlockManager (InvalidateBlocks.java:printBlockDeletionTime(79)) - dfs.namenode.startup.delay.block.deletion.sec is set to 000:00:00:00.000
2020-06-25 02:14:58,652 [main] INFO  blockmanagement.BlockManager (InvalidateBlocks.java:printBlockDeletionTime(85)) - The block deletion will start around 2020 Jun 25 02:14:58
2020-06-25 02:14:58,652 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map BlocksMap
2020-06-25 02:14:58,652 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:58,652 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 2.0% max memory 1.8 GB = 36.4 MB
2020-06-25 02:14:58,652 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^22 = 4194304 entries
2020-06-25 02:14:58,672 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:58,672 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:58,672 [main] INFO  blockmanagement.BlockManager (BlockManager.java:createSPSManager(5183)) - Storage policy satisfier is disabled
2020-06-25 02:14:58,672 [main] INFO  blockmanagement.BlockManager (BlockManager.java:createBlockTokenSecretManager(595)) - dfs.block.access.token.enable = false
2020-06-25 02:14:58,673 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:58,673 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.namenode.safemode.extension(0) assuming MILLISECONDS
2020-06-25 02:14:58,673 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(161)) - dfs.namenode.safemode.threshold-pct = 0.9990000128746033
2020-06-25 02:14:58,673 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(162)) - dfs.namenode.safemode.min.datanodes = 0
2020-06-25 02:14:58,673 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(164)) - dfs.namenode.safemode.extension = 0
2020-06-25 02:14:58,673 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(581)) - defaultReplication         = 1
2020-06-25 02:14:58,673 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(582)) - maxReplication             = 512
2020-06-25 02:14:58,673 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(583)) - minReplication             = 1
2020-06-25 02:14:58,674 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(584)) - maxReplicationStreams      = 2
2020-06-25 02:14:58,674 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(585)) - redundancyRecheckInterval  = 3000ms
2020-06-25 02:14:58,674 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(586)) - encryptDataTransfer        = false
2020-06-25 02:14:58,674 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(587)) - maxNumBlocksToLog          = 1000
2020-06-25 02:14:58,674 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map INodeMap
2020-06-25 02:14:58,674 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:58,675 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 1.0% max memory 1.8 GB = 18.2 MB
2020-06-25 02:14:58,675 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^21 = 2097152 entries
2020-06-25 02:14:58,682 [main] INFO  namenode.FSDirectory (FSDirectory.java:<init>(290)) - ACLs enabled? false
2020-06-25 02:14:58,682 [main] INFO  namenode.FSDirectory (FSDirectory.java:<init>(294)) - POSIX ACL inheritance enabled? true
2020-06-25 02:14:58,683 [main] INFO  namenode.FSDirectory (FSDirectory.java:<init>(298)) - XAttrs enabled? true
2020-06-25 02:14:58,683 [main] INFO  namenode.NameNode (FSDirectory.java:<init>(362)) - Caching file names occurring more than 10 times
2020-06-25 02:14:58,683 [main] INFO  snapshot.SnapshotManager (SnapshotManager.java:<init>(124)) - Loaded config captureOpenFiles: false, skipCaptureAccessTimeOnlyChange: false, snapshotDiffAllowSnapRootDescendant: true, maxSnapshotLimit: 65536
2020-06-25 02:14:58,683 [main] INFO  snapshot.SnapshotManager (DirectoryDiffListFactory.java:init(43)) - SkipList is disabled
2020-06-25 02:14:58,683 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map cachedBlocks
2020-06-25 02:14:58,683 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:58,683 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 0.25% max memory 1.8 GB = 4.6 MB
2020-06-25 02:14:58,684 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^19 = 524288 entries
2020-06-25 02:14:58,685 [main] INFO  metrics.TopMetrics (TopMetrics.java:logConf(76)) - NNTop conf: dfs.namenode.top.window.num.buckets = 10
2020-06-25 02:14:58,685 [main] INFO  metrics.TopMetrics (TopMetrics.java:logConf(78)) - NNTop conf: dfs.namenode.top.num.users = 10
2020-06-25 02:14:58,685 [main] INFO  metrics.TopMetrics (TopMetrics.java:logConf(80)) - NNTop conf: dfs.namenode.top.windows.minutes = 1,5,25
2020-06-25 02:14:58,685 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:initRetryCache(996)) - Retry cache on namenode is enabled
2020-06-25 02:14:58,685 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:initRetryCache(1004)) - Retry cache will use 0.03 of total heap and retry cache entry expiry time is 600000 millis
2020-06-25 02:14:58,685 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map NameNodeRetryCache
2020-06-25 02:14:58,685 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-06-25 02:14:58,686 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 0.029999999329447746% max memory 1.8 GB = 559.3 KB
2020-06-25 02:14:58,686 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^16 = 65536 entries
2020-06-25 02:14:58,694 [main] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:14:58,697 [main] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:14:58,701 [main] INFO  namenode.FileJournalManager (FileJournalManager.java:recoverUnfinalizedSegments(428)) - Recovering unfinalized segments in /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/current
2020-06-25 02:14:58,701 [main] INFO  namenode.FileJournalManager (FileJournalManager.java:recoverUnfinalizedSegments(428)) - Recovering unfinalized segments in /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2/current
2020-06-25 02:14:58,702 [main] INFO  namenode.FSImage (FSImage.java:loadFSImage(733)) - No edit log streams selected.
2020-06-25 02:14:58,702 [main] INFO  namenode.FSImage (FSImage.java:loadFSImageFile(797)) - Planning to load image: FSImageFile(file=/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/current/fsimage_0000000000000000000, cpktTxId=0000000000000000000)
2020-06-25 02:14:58,729 [main] INFO  namenode.FSImageFormatPBINode (FSImageFormatPBINode.java:loadINodeSection(234)) - Loading 1 INodes.
2020-06-25 02:14:58,734 [main] INFO  namenode.FSImageFormatProtobuf (FSImageFormatProtobuf.java:load(246)) - Loaded FSImage in 0 seconds.
2020-06-25 02:14:58,734 [main] INFO  namenode.FSImage (FSImage.java:loadFSImage(978)) - Loaded image for txid 0 from /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/current/fsimage_0000000000000000000
2020-06-25 02:14:58,738 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:loadFSImage(1110)) - Need to save fs image? false (staleImage=false, haEnabled=false, isRollingUpgrade=false)
2020-06-25 02:14:58,739 [main] INFO  namenode.FSEditLog (FSEditLog.java:startLogSegment(1365)) - Starting log segment at 1
2020-06-25 02:14:58,759 [main] INFO  namenode.NameCache (NameCache.java:initialized(143)) - initialized with 0 entries 0 lookups
2020-06-25 02:14:58,759 [main] INFO  namenode.FSNamesystem (FSNamesystem.java:loadFromDisk(727)) - Finished loading FSImage in 71 msecs
2020-06-25 02:14:58,883 [main] INFO  namenode.NameNode (NameNodeRpcServer.java:<init>(448)) - RPC server is binding to localhost:0
2020-06-25 02:14:58,916 [main] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(84)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 1000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2020-06-25 02:14:58,928 [Socket Reader #1 for port 0] INFO  ipc.Server (Server.java:run(1219)) - Starting Socket Reader #1 for port 0
2020-06-25 02:14:59,127 [Listener at localhost/41763] INFO  namenode.NameNode (NameNode.java:initialize(722)) - Clients are to use localhost:41763 to access this namenode/service.
2020-06-25 02:14:59,129 [Listener at localhost/41763] INFO  namenode.FSNamesystem (FSNamesystem.java:registerMBean(5090)) - Registered FSNamesystemState, ReplicatedBlocksState and ECBlockGroupsState MBeans.
2020-06-25 02:14:59,149 [Listener at localhost/41763] INFO  namenode.LeaseManager (LeaseManager.java:getNumUnderConstructionBlocks(171)) - Number of blocks under construction: 0
2020-06-25 02:14:59,163 [Listener at localhost/41763] INFO  blockmanagement.BlockManager (BlockManager.java:initializeReplQueues(4922)) - initializing replication queues
2020-06-25 02:14:59,163 [Listener at localhost/41763] INFO  hdfs.StateChange (BlockManagerSafeMode.java:leaveSafeMode(400)) - STATE* Leaving safe mode after 0 secs
2020-06-25 02:14:59,164 [Listener at localhost/41763] INFO  hdfs.StateChange (BlockManagerSafeMode.java:leaveSafeMode(406)) - STATE* Network topology has 0 racks and 0 datanodes
2020-06-25 02:14:59,164 [Listener at localhost/41763] INFO  hdfs.StateChange (BlockManagerSafeMode.java:leaveSafeMode(408)) - STATE* UnderReplicatedBlocks has 0 blocks
2020-06-25 02:14:59,169 [Reconstruction Queue Initializer] INFO  blockmanagement.BlockManager (BlockManager.java:processMisReplicatesAsync(3585)) - Total number of blocks            = 0
2020-06-25 02:14:59,169 [Reconstruction Queue Initializer] INFO  blockmanagement.BlockManager (BlockManager.java:processMisReplicatesAsync(3586)) - Number of invalid blocks          = 0
2020-06-25 02:14:59,170 [Reconstruction Queue Initializer] INFO  blockmanagement.BlockManager (BlockManager.java:processMisReplicatesAsync(3587)) - Number of under-replicated blocks = 0
2020-06-25 02:14:59,170 [Reconstruction Queue Initializer] INFO  blockmanagement.BlockManager (BlockManager.java:processMisReplicatesAsync(3588)) - Number of  over-replicated blocks = 0
2020-06-25 02:14:59,170 [Reconstruction Queue Initializer] INFO  blockmanagement.BlockManager (BlockManager.java:processMisReplicatesAsync(3590)) - Number of blocks being written    = 0
2020-06-25 02:14:59,170 [Reconstruction Queue Initializer] INFO  hdfs.StateChange (BlockManager.java:processMisReplicatesAsync(3593)) - STATE* Replication Queue initialization scan for invalid, over- and under-replicated blocks completed in 6 msec
2020-06-25 02:14:59,186 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1460)) - IPC Server Responder: starting
2020-06-25 02:14:59,186 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1298)) - IPC Server listener on 0: starting
2020-06-25 02:14:59,188 [Listener at localhost/41763] INFO  namenode.NameNode (NameNode.java:startCommonServices(828)) - NameNode RPC up at: localhost/127.0.0.1:41763
2020-06-25 02:14:59,192 [Listener at localhost/41763] INFO  namenode.FSNamesystem (FSNamesystem.java:startActiveServices(1222)) - Starting services required for active state
2020-06-25 02:14:59,193 [Listener at localhost/41763] INFO  namenode.FSDirectory (FSDirectory.java:updateCountForQuota(777)) - Initializing quota with 4 thread(s)
2020-06-25 02:14:59,201 [Listener at localhost/41763] INFO  namenode.FSDirectory (FSDirectory.java:updateCountForQuota(786)) - Quota initialization completed in 9 milliseconds
name space=1
storage space=0
storage types=RAM_DISK=0, SSD=0, DISK=0, ARCHIVE=0, PROVIDED=0
2020-06-25 02:14:59,206 [CacheReplicationMonitor(160473686)] INFO  blockmanagement.CacheReplicationMonitor (CacheReplicationMonitor.java:run(160)) - Starting CacheReplicationMonitor with interval 30000 milliseconds
2020-06-25 02:14:59,215 [Listener at localhost/41763] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:startDataNodes(1659)) - Starting DataNode 0 with dfs.datanode.data.dir: [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1,[DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:14:59,275 [Listener at localhost/41763] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:14:59,291 [Listener at localhost/41763] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:14:59,302 [Listener at localhost/41763] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:init(158)) - DataNode metrics system started (again)
msx-reconfagent conf 25936709 itself is unique for hdfs:DataNode 440736059
msx-reconfagent performReconf for comoponent hdfs:DataNode 440736059 uniqueConf 25936709 originConf 25936709
msx-reconfagent hdfs:DataNode init 440736059, vvmode is v1v1. Set value as v1 100
2020-06-25 02:14:59,308 [Listener at localhost/41763] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:14:59,312 [Listener at localhost/41763] INFO  datanode.BlockScanner (BlockScanner.java:<init>(184)) - Initialized block scanner with targetBytesPerSec 1048576
2020-06-25 02:14:59,316 [Listener at localhost/41763] INFO  datanode.DataNode (DataNode.java:<init>(506)) - Configured hostname is 127.0.0.1
2020-06-25 02:14:59,318 [Listener at localhost/41763] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:14:59,318 [Listener at localhost/41763] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:59,318 [Listener at localhost/41763] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:14:59,322 [Listener at localhost/41763] INFO  datanode.DataNode (DataNode.java:startDataNode(1406)) - Starting DataNode with maxLockedMemory = 0
2020-06-25 02:14:59,328 [Listener at localhost/41763] INFO  datanode.DataNode (DataNode.java:initDataXceiver(1154)) - Opened streaming server at /127.0.0.1:34883
2020-06-25 02:14:59,330 [Listener at localhost/41763] INFO  datanode.DataNode (DataXceiverServer.java:<init>(78)) - Balancing bandwidth is 10485760 bytes/s
2020-06-25 02:14:59,330 [Listener at localhost/41763] INFO  datanode.DataNode (DataXceiverServer.java:<init>(79)) - Number threads for balancing is 50
2020-06-25 02:14:59,339 [Listener at localhost/41763] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:14:59,342 [Listener at localhost/41763] INFO  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets.
2020-06-25 02:14:59,343 [Listener at localhost/41763] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(81)) - Http request log for http.requests.datanode is not defined
2020-06-25 02:14:59,343 [Listener at localhost/41763] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:14:59,346 [Listener at localhost/41763] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(990)) - Added global filter 'safety' (class=org.apache.hadoop.http.HttpServer2$QuotingInputFilter)
2020-06-25 02:14:59,347 [Listener at localhost/41763] INFO  http.HttpServer2 (HttpServer2.java:addFilter(963)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context datanode
2020-06-25 02:14:59,348 [Listener at localhost/41763] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2020-06-25 02:14:59,348 [Listener at localhost/41763] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2020-06-25 02:14:59,353 [Listener at localhost/41763] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1206)) - Jetty bound to port 45857
2020-06-25 02:14:59,353 [Listener at localhost/41763] INFO  server.Server (Server.java:doStart(351)) - jetty-9.3.24.v20180605, build timestamp: 2018-06-05T17:11:56Z, git hash: 84205aa28f11a4f31f2a3b86d1bba2cc8ab69827
2020-06-25 02:14:59,356 [Listener at localhost/41763] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@784b990c{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,AVAILABLE}
2020-06-25 02:14:59,357 [Listener at localhost/41763] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@25bc0606{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,AVAILABLE}
2020-06-25 02:14:59,365 [Listener at localhost/41763] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.w.WebAppContext@758a34ce{/,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/datanode/,AVAILABLE}{/datanode}
2020-06-25 02:14:59,366 [Listener at localhost/41763] INFO  server.AbstractConnector (AbstractConnector.java:doStart(278)) - Started ServerConnector@7ec3394b{HTTP/1.1,[http/1.1]}{localhost:45857}
2020-06-25 02:14:59,366 [Listener at localhost/41763] INFO  server.Server (Server.java:doStart(419)) - Started @2742ms
2020-06-25 02:14:59,560 [Listener at localhost/41763] INFO  web.DatanodeHttpServer (DatanodeHttpServer.java:start(255)) - Listening HTTP traffic on /127.0.0.1:39983
2020-06-25 02:14:59,561 [org.apache.hadoop.util.JvmPauseMonitor$Monitor@6722db6e] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(188)) - Starting JVM pause monitor
2020-06-25 02:14:59,562 [Listener at localhost/41763] INFO  datanode.DataNode (DataNode.java:startDataNode(1434)) - dnUserName = root
2020-06-25 02:14:59,563 [Listener at localhost/41763] INFO  datanode.DataNode (DataNode.java:startDataNode(1435)) - supergroup = supergroup
2020-06-25 02:14:59,581 [Listener at localhost/41763] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(84)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 1000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2020-06-25 02:14:59,582 [Socket Reader #1 for port 0] INFO  ipc.Server (Server.java:run(1219)) - Starting Socket Reader #1 for port 0
2020-06-25 02:14:59,588 [Listener at localhost/45402] INFO  datanode.DataNode (DataNode.java:initIpcServer(1040)) - Opened IPC server at /127.0.0.1:45402
2020-06-25 02:14:59,598 [Listener at localhost/45402] INFO  datanode.DataNode (BlockPoolManager.java:refreshNamenodes(149)) - Refresh request received for nameservices: null
2020-06-25 02:14:59,599 [Listener at localhost/45402] INFO  datanode.DataNode (BlockPoolManager.java:doRefreshNamenodes(210)) - Starting BPOfferServices for nameservices: <default>
2020-06-25 02:14:59,745 [Thread-62] INFO  datanode.DataNode (BPServiceActor.java:run(817)) - Block pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763 starting to offer service
2020-06-25 02:14:59,751 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1460)) - IPC Server Responder: starting
2020-06-25 02:14:59,752 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1298)) - IPC Server listener on 0: starting
2020-06-25 02:14:59,946 [Thread-62] INFO  datanode.DataNode (BPOfferService.java:verifyAndSetNamespaceInfo(378)) - Acknowledging ACTIVE Namenode during handshakeBlock pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763
2020-06-25 02:14:59,948 [Thread-62] INFO  common.Storage (DataStorage.java:getParallelVolumeLoadThreadsNum(354)) - Using 2 threads to upgrade data directories (dfs.datanode.parallel.volumes.load.threads.num=2, dataDirs=2)
2020-06-25 02:14:59,950 [Thread-62] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:14:59,951 [Thread-62] INFO  common.Storage (DataStorage.java:loadStorageDirectory(282)) - Storage directory with location [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1 is not formatted for namespace 1824630191. Formatting...
2020-06-25 02:14:59,952 [Thread-62] INFO  common.Storage (DataStorage.java:createStorageID(160)) - Generated new storageID DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 for directory /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1 
2020-06-25 02:14:59,956 [Thread-62] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:14:59,956 [Thread-62] INFO  common.Storage (DataStorage.java:loadStorageDirectory(282)) - Storage directory with location [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2 is not formatted for namespace 1824630191. Formatting...
2020-06-25 02:14:59,956 [Thread-62] INFO  common.Storage (DataStorage.java:createStorageID(160)) - Generated new storageID DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc for directory /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2 
2020-06-25 02:14:59,978 [Thread-62] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:14:59,979 [Thread-62] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:14:59,979 [Thread-62] INFO  common.Storage (BlockPoolSliceStorage.java:loadStorageDirectory(168)) - Block pool storage directory for location [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1 and block pool id BP-1096723371-172.17.0.11-1593051297894 is not formatted. Formatting ...
2020-06-25 02:14:59,980 [Thread-62] INFO  common.Storage (BlockPoolSliceStorage.java:format(280)) - Formatting block pool BP-1096723371-172.17.0.11-1593051297894 directory /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894/current
2020-06-25 02:14:59,999 [Thread-62] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:14:59,999 [Thread-62] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:00,000 [Thread-62] INFO  common.Storage (BlockPoolSliceStorage.java:loadStorageDirectory(168)) - Block pool storage directory for location [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2 and block pool id BP-1096723371-172.17.0.11-1593051297894 is not formatted. Formatting ...
2020-06-25 02:15:00,000 [Thread-62] INFO  common.Storage (BlockPoolSliceStorage.java:format(280)) - Formatting block pool BP-1096723371-172.17.0.11-1593051297894 directory /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894/current
2020-06-25 02:15:00,002 [Thread-62] INFO  datanode.DataNode (DataNode.java:initStorage(1752)) - Setting up storage: nsid=1824630191;bpid=BP-1096723371-172.17.0.11-1593051297894;lv=-57;nsInfo=lv=-65;cid=testClusterID;nsid=1824630191;c=1593051297894;bpid=BP-1096723371-172.17.0.11-1593051297894;dnuuid=null
2020-06-25 02:15:00,004 [Thread-62] INFO  datanode.DataNode (DataNode.java:checkDatanodeUuid(1552)) - Generated and persisted new Datanode UUID ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:00,097 [Thread-62] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:00,097 [Thread-62] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, StorageType: DISK
2020-06-25 02:15:00,102 [Thread-62] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:00,102 [Thread-62] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, StorageType: DISK
2020-06-25 02:15:00,106 [Thread-62] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:registerMBean(2280)) - Registered FSDatasetState MBean
2020-06-25 02:15:00,110 [Thread-62] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:00,115 [IPC Server handler 1 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=datanodeReport	src=null	dst=null	perm=null	proto=rpc
2020-06-25 02:15:00,118 [Thread-62] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:00,119 [Thread-62] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:00,120 [Thread-62] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:00,120 [Thread-62] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addBlockPool(2791)) - Adding block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:00,121 [Listener at localhost/45402] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:shouldWait(2786)) - dnInfo.length != numDataNodes
2020-06-25 02:15:00,121 [Thread-82] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:00,121 [Thread-83] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
2020-06-25 02:15:00,121 [Listener at localhost/45402] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:waitActive(2707)) - Waiting for cluster to become active
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug GetSpaceUsed:build()
msx-debug GetSpaceUsed:build()
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug DU:refresh()
msx-debug DU:refresh()
msx-debug BlockPoolSlice<init> after get this.dfsUsage
msx-debug BlockPoolSlice<init> after get this.dfsUsage
java.lang.Exception
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
java.lang.Exceptionmsx-debug this.dfsUsage.getUsed() = 24576

	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
msx-debug this.dfsUsage.getUsed() = 24576
2020-06-25 02:15:00,147 [Thread-83] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 26ms
2020-06-25 02:15:00,147 [Thread-82] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 27ms
2020-06-25 02:15:00,148 [Thread-62] INFO  impl.FsDatasetImpl (FsVolumeList.java:addBlockPool(431)) - Total time to scan all replicas for block pool BP-1096723371-172.17.0.11-1593051297894: 28ms
2020-06-25 02:15:00,151 [Thread-86] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:00,151 [Thread-87] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
2020-06-25 02:15:00,151 [Thread-86] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(887)) - Replica Cache file: /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas doesn't exist 
2020-06-25 02:15:00,151 [Thread-87] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(887)) - Replica Cache file: /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas doesn't exist 
2020-06-25 02:15:00,152 [Thread-87] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 2ms
2020-06-25 02:15:00,153 [Thread-86] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 2ms
2020-06-25 02:15:00,153 [Thread-62] INFO  impl.FsDatasetImpl (FsVolumeList.java:getAllVolumesMap(225)) - Total time to add all replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894: 3ms
2020-06-25 02:15:00,156 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(381)) - Now scanning bpid BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:00,156 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(381)) - Now scanning bpid BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:00,157 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:runLoop(539)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84): finished scanning block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:00,157 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:runLoop(539)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc): finished scanning block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:00,175 [Thread-62] INFO  datanode.DirectoryScanner (DirectoryScanner.java:start(284)) - Periodic Directory Tree Verification scan starting at 6/25/20 7:27 AM with interval of 21600000ms
2020-06-25 02:15:00,179 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84): no suitable block pools found to scan.  Waiting 1814399976 ms.
2020-06-25 02:15:00,179 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc): no suitable block pools found to scan.  Waiting 1814399977 ms.
2020-06-25 02:15:00,182 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(767)) - Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 beginning handshake with NN
2020-06-25 02:15:00,194 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1042)) - BLOCK* registerDatanode: from DatanodeRegistration(127.0.0.1:34883, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=39983, infoSecurePort=0, ipcPort=45402, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894) storage ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:00,196 [IPC Server handler 0 on default port 41763] INFO  net.NetworkTopology (NetworkTopology.java:add(145)) - Adding a new node: /default-rack/127.0.0.1:34883
2020-06-25 02:15:00,196 [IPC Server handler 0 on default port 41763] INFO  blockmanagement.BlockReportLeaseManager (BlockReportLeaseManager.java:registerNode(204)) - Registered DN ccf64283-2ed3-4ece-a868-76f6dc0e933b (127.0.0.1:34883).
2020-06-25 02:15:00,202 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(786)) - Block pool Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 successfully registered with NN
2020-06-25 02:15:00,203 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:offerService(616)) - For namenode localhost/127.0.0.1:41763 using BLOCKREPORT_INTERVAL of 21600000msec CACHEREPORT_INTERVAL of 10000msec Initial delay: 0msec; heartBeatInterval=1000
2020-06-25 02:15:00,217 [IPC Server handler 1 on default port 41763] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 for DN 127.0.0.1:34883
2020-06-25 02:15:00,218 [IPC Server handler 1 on default port 41763] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc for DN 127.0.0.1:34883
2020-06-25 02:15:00,224 [IPC Server handler 2 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=datanodeReport	src=null	dst=null	perm=null	proto=rpc
2020-06-25 02:15:00,233 [Listener at localhost/45402] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:waitActive(2762)) - Cluster is active
2020-06-25 02:15:00,234 [Listener at localhost/45402] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:00,234 [Listener at localhost/45402] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:00,245 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0x1b0fc5584147db99: Processing first storage report for DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:00,247 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0x1b0fc5584147db99: from storage DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 node DatanodeRegistration(127.0.0.1:34883, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=39983, infoSecurePort=0, ipcPort=45402, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 0, hasStaleStorage: true, processing time: 2 msecs, invalidatedBlocks: 0
2020-06-25 02:15:00,247 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0x1b0fc5584147db99: Processing first storage report for DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:00,247 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0x1b0fc5584147db99: from storage DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc node DatanodeRegistration(127.0.0.1:34883, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=39983, infoSecurePort=0, ipcPort=45402, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 0, hasStaleStorage: false, processing time: 0 msecs, invalidatedBlocks: 0
2020-06-25 02:15:00,269 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:blockReport(424)) - Successfully sent block report 0x1b0fc5584147db99,  containing 2 storage report(s), of which we sent 2. The reports had 0 total blocks and used 1 RPC(s). This took 4 msec to generate and 38 msecs for RPC and NN processing. Got back one command: FinalizeCommand/5.
2020-06-25 02:15:00,269 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPOfferService.java:processCommandFromActive(759)) - Got finalize command for block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:00,343 [IPC Server handler 5 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=datanodeReport	src=null	dst=null	perm=null	proto=rpc
2020-06-25 02:15:00,344 [Listener at localhost/45402] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:waitActive(2762)) - Cluster is active
2020-06-25 02:15:00,372 [IPC Server handler 6 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=mkdirs	src=/	dst=null	perm=root:supergroup:rwxr-xr-x	proto=rpc
2020-06-25 02:15:00,401 [IPC Server handler 7 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=create	src=/tmp.txt	dst=null	perm=root:supergroup:rw-r--r--	proto=rpc
2020-06-25 02:15:00,452 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741825_1001, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:00,469 [Thread-91] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:00,517 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36348 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741825_1001]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741825_1001 src: /127.0.0.1:36348 dest: /127.0.0.1:34883
2020-06-25 02:15:00,562 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741825_1001, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36348, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741825_1001, duration(ns): 9624811
2020-06-25 02:15:00,562 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741825_1001, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741825_1001, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:00,569 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741826_1002, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:00,571 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:00,572 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36350 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741826_1002]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741826_1002 src: /127.0.0.1:36350 dest: /127.0.0.1:34883
2020-06-25 02:15:00,576 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741826_1002, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36350, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741826_1002, duration(ns): 1603119
2020-06-25 02:15:00,576 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741826_1002, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741826_1002, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:00,578 [IPC Server handler 2 on default port 41763] INFO  namenode.FSNamesystem (FSNamesystem.java:checkBlocksComplete(2995)) - BLOCK* blk_1073741825_1001 is COMMITTED but not COMPLETE(numNodes= 0 <  minimum = 1) in file /tmp.txt
2020-06-25 02:15:00,579 [IPC Server handler 2 on default port 41763] INFO  ipc.Server (Server.java:logException(2976)) - IPC Server handler 2 on default port 41763, call Call#14 Retry#0 org.apache.hadoop.hdfs.protocol.ClientProtocol.addBlock from 127.0.0.1:32848
org.apache.hadoop.hdfs.server.namenode.NotReplicatedYetException: Not replicated yet: /tmp.txt
	at org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.validateAddBlock(FSDirWriteFileOp.java:181)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:2777)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:892)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:574)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
2020-06-25 02:15:00,585 [DataStreamer for file /tmp.txt] INFO  hdfs.DFSOutputStream (DFSOutputStream.java:addBlock(1099)) - Exception while adding a block
org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.hdfs.server.namenode.NotReplicatedYetException): Not replicated yet: /tmp.txt
	at org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.validateAddBlock(FSDirWriteFileOp.java:181)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:2777)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:892)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:574)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)

	at org.apache.hadoop.ipc.Client.getRpcResponse(Client.java:1545)
	at org.apache.hadoop.ipc.Client.call(Client.java:1491)
	at org.apache.hadoop.ipc.Client.call(Client.java:1388)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy23.addBlock(Unknown Source)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.addBlock(ClientNamenodeProtocolTranslatorPB.java:517)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy24.addBlock(Unknown Source)
	at org.apache.hadoop.hdfs.DFSOutputStream.addBlock(DFSOutputStream.java:1081)
	at org.apache.hadoop.hdfs.DataStreamer.locateFollowingBlock(DataStreamer.java:1866)
	at org.apache.hadoop.hdfs.DataStreamer.nextBlockOutputStream(DataStreamer.java:1668)
	at org.apache.hadoop.hdfs.DataStreamer.run(DataStreamer.java:716)
2020-06-25 02:15:00,586 [DataStreamer for file /tmp.txt] WARN  hdfs.DFSOutputStream (DFSOutputStream.java:addBlock(1106)) - NotReplicatedYetException sleeping /tmp.txt retries left 4
2020-06-25 02:15:00,990 [IPC Server handler 4 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741827_1003, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:00,993 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:00,995 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36352 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741827_1003]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741827_1003 src: /127.0.0.1:36352 dest: /127.0.0.1:34883
2020-06-25 02:15:01,001 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741827_1003, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36352, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741827_1003, duration(ns): 3763656
2020-06-25 02:15:01,001 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741827_1003, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741827_1003, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,005 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741828_1004, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,007 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,009 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36354 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741828_1004]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741828_1004 src: /127.0.0.1:36354 dest: /127.0.0.1:34883
2020-06-25 02:15:01,016 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741828_1004, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36354, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741828_1004, duration(ns): 4699244
2020-06-25 02:15:01,017 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741828_1004, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741828_1004, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,020 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741829_1005, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,022 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,024 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36356 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741829_1005]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741829_1005 src: /127.0.0.1:36356 dest: /127.0.0.1:34883
2020-06-25 02:15:01,029 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741829_1005, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36356, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741829_1005, duration(ns): 3463008
2020-06-25 02:15:01,030 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741829_1005, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741829_1005, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,033 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741830_1006, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,035 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,037 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36358 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741830_1006]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741830_1006 src: /127.0.0.1:36358 dest: /127.0.0.1:34883
2020-06-25 02:15:01,043 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741830_1006, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36358, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741830_1006, duration(ns): 3609728
2020-06-25 02:15:01,043 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741830_1006, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741830_1006, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,047 [IPC Server handler 3 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741831_1007, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,049 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,050 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36360 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741831_1007]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741831_1007 src: /127.0.0.1:36360 dest: /127.0.0.1:34883
2020-06-25 02:15:01,055 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741831_1007, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36360, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741831_1007, duration(ns): 2701002
2020-06-25 02:15:01,055 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741831_1007, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741831_1007, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,058 [IPC Server handler 4 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741832_1008, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,059 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,060 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36362 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741832_1008]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741832_1008 src: /127.0.0.1:36362 dest: /127.0.0.1:34883
2020-06-25 02:15:01,065 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741832_1008, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36362, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741832_1008, duration(ns): 2746273
2020-06-25 02:15:01,066 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741832_1008, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741832_1008, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,068 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741833_1009, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,070 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,071 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36364 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741833_1009]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741833_1009 src: /127.0.0.1:36364 dest: /127.0.0.1:34883
2020-06-25 02:15:01,077 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741833_1009, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36364, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741833_1009, duration(ns): 3362707
2020-06-25 02:15:01,077 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741833_1009, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741833_1009, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,080 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741834_1010, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,081 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,083 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36366 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741834_1010]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741834_1010 src: /127.0.0.1:36366 dest: /127.0.0.1:34883
2020-06-25 02:15:01,087 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741834_1010, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36366, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741834_1010, duration(ns): 2806591
2020-06-25 02:15:01,088 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741834_1010, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741834_1010, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,090 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741835_1011, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,092 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,094 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36368 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741835_1011]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741835_1011 src: /127.0.0.1:36368 dest: /127.0.0.1:34883
2020-06-25 02:15:01,099 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741835_1011, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36368, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741835_1011, duration(ns): 3199333
2020-06-25 02:15:01,099 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741835_1011, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741835_1011, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,101 [IPC Server handler 3 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741836_1012, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,103 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,104 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36370 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741836_1012]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741836_1012 src: /127.0.0.1:36370 dest: /127.0.0.1:34883
2020-06-25 02:15:01,109 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741836_1012, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36370, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741836_1012, duration(ns): 2856556
2020-06-25 02:15:01,110 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741836_1012, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741836_1012, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,114 [IPC Server handler 4 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741837_1013, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,115 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,117 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36372 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741837_1013]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741837_1013 src: /127.0.0.1:36372 dest: /127.0.0.1:34883
2020-06-25 02:15:01,121 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741837_1013, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36372, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741837_1013, duration(ns): 2971336
2020-06-25 02:15:01,122 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741837_1013, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741837_1013, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,124 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741838_1014, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,126 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,127 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36374 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741838_1014]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741838_1014 src: /127.0.0.1:36374 dest: /127.0.0.1:34883
2020-06-25 02:15:01,132 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741838_1014, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36374, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741838_1014, duration(ns): 2838145
2020-06-25 02:15:01,132 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741838_1014, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741838_1014, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,136 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741839_1015, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,138 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,139 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36376 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741839_1015]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741839_1015 src: /127.0.0.1:36376 dest: /127.0.0.1:34883
2020-06-25 02:15:01,143 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741839_1015, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36376, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741839_1015, duration(ns): 2591664
2020-06-25 02:15:01,144 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741839_1015, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741839_1015, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,147 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741840_1016, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,150 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,151 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36378 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741840_1016]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741840_1016 src: /127.0.0.1:36378 dest: /127.0.0.1:34883
2020-06-25 02:15:01,156 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741840_1016, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36378, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741840_1016, duration(ns): 2931836
2020-06-25 02:15:01,157 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741840_1016, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741840_1016, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,159 [IPC Server handler 3 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741841_1017, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,161 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,162 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36380 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741841_1017]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741841_1017 src: /127.0.0.1:36380 dest: /127.0.0.1:34883
2020-06-25 02:15:01,166 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741841_1017, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36380, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741841_1017, duration(ns): 2390012
2020-06-25 02:15:01,166 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741841_1017, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741841_1017, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,169 [IPC Server handler 4 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741842_1018, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,170 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,171 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36382 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741842_1018]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741842_1018 src: /127.0.0.1:36382 dest: /127.0.0.1:34883
2020-06-25 02:15:01,176 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741842_1018, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36382, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741842_1018, duration(ns): 2548160
2020-06-25 02:15:01,176 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741842_1018, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741842_1018, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,178 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741843_1019, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,180 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,181 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36384 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741843_1019]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741843_1019 src: /127.0.0.1:36384 dest: /127.0.0.1:34883
2020-06-25 02:15:01,185 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741843_1019, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36384, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741843_1019, duration(ns): 2396950
2020-06-25 02:15:01,186 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741843_1019, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741843_1019, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,188 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741844_1020, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,189 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,191 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36386 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741844_1020]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741844_1020 src: /127.0.0.1:36386 dest: /127.0.0.1:34883
2020-06-25 02:15:01,196 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741844_1020, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36386, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741844_1020, duration(ns): 2890840
2020-06-25 02:15:01,196 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741844_1020, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741844_1020, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,198 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741845_1021, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,200 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,201 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36388 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741845_1021]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741845_1021 src: /127.0.0.1:36388 dest: /127.0.0.1:34883
2020-06-25 02:15:01,206 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741845_1021, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36388, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741845_1021, duration(ns): 3344913
2020-06-25 02:15:01,207 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741845_1021, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741845_1021, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,209 [IPC Server handler 3 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741846_1022, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,211 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,212 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36390 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741846_1022]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741846_1022 src: /127.0.0.1:36390 dest: /127.0.0.1:34883
2020-06-25 02:15:01,219 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741846_1022, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36390, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741846_1022, duration(ns): 4774593
2020-06-25 02:15:01,220 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741846_1022, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741846_1022, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,223 [IPC Server handler 4 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741847_1023, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,225 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,225 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36392 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741847_1023]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741847_1023 src: /127.0.0.1:36392 dest: /127.0.0.1:34883
2020-06-25 02:15:01,229 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741847_1023, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36392, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741847_1023, duration(ns): 1814135
2020-06-25 02:15:01,229 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741847_1023, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741847_1023, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,231 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741848_1024, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,233 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,234 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36394 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741848_1024]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741848_1024 src: /127.0.0.1:36394 dest: /127.0.0.1:34883
2020-06-25 02:15:01,238 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741848_1024, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36394, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741848_1024, duration(ns): 1982952
2020-06-25 02:15:01,238 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741848_1024, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741848_1024, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,239 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741849_1025, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,241 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,242 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36396 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741849_1025]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741849_1025 src: /127.0.0.1:36396 dest: /127.0.0.1:34883
2020-06-25 02:15:01,246 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741849_1025, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36396, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741849_1025, duration(ns): 2074209
2020-06-25 02:15:01,246 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741849_1025, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741849_1025, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,248 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741850_1026, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,249 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,250 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36398 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741850_1026]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741850_1026 src: /127.0.0.1:36398 dest: /127.0.0.1:34883
2020-06-25 02:15:01,254 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741850_1026, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36398, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741850_1026, duration(ns): 1621827
2020-06-25 02:15:01,254 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741850_1026, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741850_1026, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,256 [IPC Server handler 3 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741851_1027, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,257 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,259 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36400 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741851_1027]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741851_1027 src: /127.0.0.1:36400 dest: /127.0.0.1:34883
2020-06-25 02:15:01,263 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741851_1027, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36400, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741851_1027, duration(ns): 1939032
2020-06-25 02:15:01,263 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741851_1027, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741851_1027, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,265 [IPC Server handler 4 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741852_1028, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,266 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,267 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36402 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741852_1028]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741852_1028 src: /127.0.0.1:36402 dest: /127.0.0.1:34883
2020-06-25 02:15:01,271 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741852_1028, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36402, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741852_1028, duration(ns): 1670330
2020-06-25 02:15:01,271 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741852_1028, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741852_1028, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,272 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741853_1029, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,274 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,275 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36404 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741853_1029]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741853_1029 src: /127.0.0.1:36404 dest: /127.0.0.1:34883
2020-06-25 02:15:01,278 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741853_1029, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36404, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741853_1029, duration(ns): 1785020
2020-06-25 02:15:01,278 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741853_1029, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741853_1029, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,281 [IPC Server handler 9 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741854_1030, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,282 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,283 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36406 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741854_1030]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741854_1030 src: /127.0.0.1:36406 dest: /127.0.0.1:34883
2020-06-25 02:15:01,287 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741854_1030, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36406, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741854_1030, duration(ns): 1906139
2020-06-25 02:15:01,287 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741854_1030, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741854_1030, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,289 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741855_1031, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,291 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,292 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36408 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741855_1031]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741855_1031 src: /127.0.0.1:36408 dest: /127.0.0.1:34883
2020-06-25 02:15:01,296 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741855_1031, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36408, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741855_1031, duration(ns): 2033434
2020-06-25 02:15:01,296 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741855_1031, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741855_1031, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,297 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741856_1032, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,299 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,300 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36410 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741856_1032]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741856_1032 src: /127.0.0.1:36410 dest: /127.0.0.1:34883
2020-06-25 02:15:01,304 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741856_1032, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36410, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741856_1032, duration(ns): 1797167
2020-06-25 02:15:01,304 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741856_1032, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741856_1032, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,305 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741857_1033, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,307 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,308 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36412 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741857_1033]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741857_1033 src: /127.0.0.1:36412 dest: /127.0.0.1:34883
2020-06-25 02:15:01,311 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741857_1033, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36412, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741857_1033, duration(ns): 1544868
2020-06-25 02:15:01,311 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741857_1033, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741857_1033, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,312 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741858_1034, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,314 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,315 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36414 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741858_1034]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741858_1034 src: /127.0.0.1:36414 dest: /127.0.0.1:34883
2020-06-25 02:15:01,318 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741858_1034, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36414, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741858_1034, duration(ns): 1441089
2020-06-25 02:15:01,318 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741858_1034, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741858_1034, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,320 [IPC Server handler 9 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741859_1035, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,321 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,322 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36416 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741859_1035]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741859_1035 src: /127.0.0.1:36416 dest: /127.0.0.1:34883
2020-06-25 02:15:01,325 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741859_1035, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36416, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741859_1035, duration(ns): 1536618
2020-06-25 02:15:01,326 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741859_1035, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741859_1035, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,327 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741860_1036, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,329 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,329 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36418 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741860_1036]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741860_1036 src: /127.0.0.1:36418 dest: /127.0.0.1:34883
2020-06-25 02:15:01,332 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741860_1036, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36418, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741860_1036, duration(ns): 1486461
2020-06-25 02:15:01,333 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741860_1036, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741860_1036, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,334 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741861_1037, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,336 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,336 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36420 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741861_1037]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741861_1037 src: /127.0.0.1:36420 dest: /127.0.0.1:34883
2020-06-25 02:15:01,340 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741861_1037, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36420, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741861_1037, duration(ns): 1411814
2020-06-25 02:15:01,340 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741861_1037, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741861_1037, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,341 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741862_1038, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,343 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,343 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36422 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741862_1038]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741862_1038 src: /127.0.0.1:36422 dest: /127.0.0.1:34883
2020-06-25 02:15:01,346 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741862_1038, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36422, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741862_1038, duration(ns): 1382872
2020-06-25 02:15:01,347 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741862_1038, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741862_1038, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,348 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741863_1039, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,349 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,350 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36424 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741863_1039]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741863_1039 src: /127.0.0.1:36424 dest: /127.0.0.1:34883
2020-06-25 02:15:01,353 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741863_1039, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36424, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741863_1039, duration(ns): 1424788
2020-06-25 02:15:01,353 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741863_1039, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741863_1039, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,355 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741864_1040, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,356 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,357 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36426 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741864_1040]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741864_1040 src: /127.0.0.1:36426 dest: /127.0.0.1:34883
2020-06-25 02:15:01,360 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741864_1040, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36426, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741864_1040, duration(ns): 1507415
2020-06-25 02:15:01,360 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741864_1040, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741864_1040, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,362 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741865_1041, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,363 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,364 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36428 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741865_1041]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741865_1041 src: /127.0.0.1:36428 dest: /127.0.0.1:34883
2020-06-25 02:15:01,368 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741865_1041, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36428, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741865_1041, duration(ns): 2444618
2020-06-25 02:15:01,369 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741865_1041, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741865_1041, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,370 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741866_1042, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,372 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,373 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36430 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741866_1042]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741866_1042 src: /127.0.0.1:36430 dest: /127.0.0.1:34883
2020-06-25 02:15:01,378 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741866_1042, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36430, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741866_1042, duration(ns): 3282840
2020-06-25 02:15:01,379 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741866_1042, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741866_1042, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,380 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741867_1043, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,381 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,382 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36432 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741867_1043]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741867_1043 src: /127.0.0.1:36432 dest: /127.0.0.1:34883
2020-06-25 02:15:01,385 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741867_1043, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36432, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741867_1043, duration(ns): 977842
2020-06-25 02:15:01,386 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741867_1043, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741867_1043, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,388 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741868_1044, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,389 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,390 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36434 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741868_1044]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741868_1044 src: /127.0.0.1:36434 dest: /127.0.0.1:34883
2020-06-25 02:15:01,393 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741868_1044, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36434, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741868_1044, duration(ns): 1510362
2020-06-25 02:15:01,394 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741868_1044, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741868_1044, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,395 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741869_1045, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,396 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,397 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36436 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741869_1045]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741869_1045 src: /127.0.0.1:36436 dest: /127.0.0.1:34883
2020-06-25 02:15:01,400 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741869_1045, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36436, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741869_1045, duration(ns): 1421387
2020-06-25 02:15:01,400 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741869_1045, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741869_1045, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,402 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741870_1046, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,403 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,404 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36438 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741870_1046]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741870_1046 src: /127.0.0.1:36438 dest: /127.0.0.1:34883
2020-06-25 02:15:01,407 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741870_1046, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36438, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741870_1046, duration(ns): 1722111
2020-06-25 02:15:01,407 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741870_1046, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741870_1046, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,409 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741871_1047, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,410 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,410 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36440 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741871_1047]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741871_1047 src: /127.0.0.1:36440 dest: /127.0.0.1:34883
2020-06-25 02:15:01,413 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741871_1047, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36440, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741871_1047, duration(ns): 1318835
2020-06-25 02:15:01,413 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741871_1047, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741871_1047, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,415 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741872_1048, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,416 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,417 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36442 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741872_1048]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741872_1048 src: /127.0.0.1:36442 dest: /127.0.0.1:34883
2020-06-25 02:15:01,420 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741872_1048, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36442, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741872_1048, duration(ns): 1549206
2020-06-25 02:15:01,420 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741872_1048, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741872_1048, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,422 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741873_1049, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,423 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,424 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36444 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741873_1049]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741873_1049 src: /127.0.0.1:36444 dest: /127.0.0.1:34883
2020-06-25 02:15:01,427 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741873_1049, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36444, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741873_1049, duration(ns): 1576019
2020-06-25 02:15:01,427 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741873_1049, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741873_1049, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,429 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741874_1050, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,430 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,431 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36446 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741874_1050]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741874_1050 src: /127.0.0.1:36446 dest: /127.0.0.1:34883
2020-06-25 02:15:01,434 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741874_1050, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36446, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741874_1050, duration(ns): 1566940
2020-06-25 02:15:01,434 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741874_1050, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741874_1050, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,436 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741875_1051, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,437 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,438 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36448 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741875_1051]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741875_1051 src: /127.0.0.1:36448 dest: /127.0.0.1:34883
2020-06-25 02:15:01,441 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741875_1051, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36448, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741875_1051, duration(ns): 1823861
2020-06-25 02:15:01,441 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741875_1051, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741875_1051, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,443 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741876_1052, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,444 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,445 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36450 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741876_1052]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741876_1052 src: /127.0.0.1:36450 dest: /127.0.0.1:34883
2020-06-25 02:15:01,448 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741876_1052, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36450, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741876_1052, duration(ns): 1382398
2020-06-25 02:15:01,448 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741876_1052, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741876_1052, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,450 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741877_1053, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,451 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,452 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36452 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741877_1053]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741877_1053 src: /127.0.0.1:36452 dest: /127.0.0.1:34883
2020-06-25 02:15:01,455 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741877_1053, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36452, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741877_1053, duration(ns): 1921507
2020-06-25 02:15:01,455 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741877_1053, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741877_1053, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,457 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741878_1054, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,458 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,459 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36454 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741878_1054]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741878_1054 src: /127.0.0.1:36454 dest: /127.0.0.1:34883
2020-06-25 02:15:01,461 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741878_1054, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36454, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741878_1054, duration(ns): 992221
2020-06-25 02:15:01,462 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741878_1054, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741878_1054, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,463 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741879_1055, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,465 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,466 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36456 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741879_1055]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741879_1055 src: /127.0.0.1:36456 dest: /127.0.0.1:34883
2020-06-25 02:15:01,468 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741879_1055, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36456, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741879_1055, duration(ns): 1080953
2020-06-25 02:15:01,468 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741879_1055, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741879_1055, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,470 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741880_1056, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,472 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,472 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36458 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741880_1056]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741880_1056 src: /127.0.0.1:36458 dest: /127.0.0.1:34883
2020-06-25 02:15:01,475 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741880_1056, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36458, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741880_1056, duration(ns): 1039857
2020-06-25 02:15:01,475 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741880_1056, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741880_1056, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,477 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741881_1057, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,478 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,479 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36460 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741881_1057]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741881_1057 src: /127.0.0.1:36460 dest: /127.0.0.1:34883
2020-06-25 02:15:01,481 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741881_1057, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36460, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741881_1057, duration(ns): 931783
2020-06-25 02:15:01,481 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741881_1057, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741881_1057, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,484 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741882_1058, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,485 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,486 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36462 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741882_1058]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741882_1058 src: /127.0.0.1:36462 dest: /127.0.0.1:34883
2020-06-25 02:15:01,488 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741882_1058, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36462, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741882_1058, duration(ns): 1028305
2020-06-25 02:15:01,489 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741882_1058, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741882_1058, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,491 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741883_1059, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,492 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,493 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36464 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741883_1059]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741883_1059 src: /127.0.0.1:36464 dest: /127.0.0.1:34883
2020-06-25 02:15:01,495 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741883_1059, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36464, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741883_1059, duration(ns): 1088665
2020-06-25 02:15:01,496 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741883_1059, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741883_1059, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,497 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741884_1060, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,499 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,500 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36466 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741884_1060]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741884_1060 src: /127.0.0.1:36466 dest: /127.0.0.1:34883
2020-06-25 02:15:01,502 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741884_1060, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36466, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741884_1060, duration(ns): 1026245
2020-06-25 02:15:01,502 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741884_1060, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741884_1060, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,504 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741885_1061, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,505 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,506 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36468 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741885_1061]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741885_1061 src: /127.0.0.1:36468 dest: /127.0.0.1:34883
2020-06-25 02:15:01,509 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741885_1061, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36468, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741885_1061, duration(ns): 1155998
2020-06-25 02:15:01,509 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741885_1061, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741885_1061, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,511 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741886_1062, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,513 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,513 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36470 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741886_1062]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741886_1062 src: /127.0.0.1:36470 dest: /127.0.0.1:34883
2020-06-25 02:15:01,516 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741886_1062, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36470, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741886_1062, duration(ns): 1359955
2020-06-25 02:15:01,516 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741886_1062, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741886_1062, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,518 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741887_1063, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,520 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,521 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36472 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741887_1063]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741887_1063 src: /127.0.0.1:36472 dest: /127.0.0.1:34883
2020-06-25 02:15:01,524 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741887_1063, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36472, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741887_1063, duration(ns): 1866771
2020-06-25 02:15:01,525 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741887_1063, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741887_1063, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,527 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741888_1064, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,528 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,530 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36474 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741888_1064]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741888_1064 src: /127.0.0.1:36474 dest: /127.0.0.1:34883
2020-06-25 02:15:01,533 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741888_1064, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36474, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741888_1064, duration(ns): 1811331
2020-06-25 02:15:01,534 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741888_1064, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741888_1064, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,536 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741889_1065, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,537 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,538 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36476 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741889_1065]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741889_1065 src: /127.0.0.1:36476 dest: /127.0.0.1:34883
2020-06-25 02:15:01,540 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741889_1065, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36476, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741889_1065, duration(ns): 917342
2020-06-25 02:15:01,541 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741889_1065, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741889_1065, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,542 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741890_1066, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,543 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,544 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36478 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741890_1066]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741890_1066 src: /127.0.0.1:36478 dest: /127.0.0.1:34883
2020-06-25 02:15:01,546 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741890_1066, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36478, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741890_1066, duration(ns): 651842
2020-06-25 02:15:01,546 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741890_1066, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741890_1066, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,547 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741891_1067, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,549 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,549 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36480 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741891_1067]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741891_1067 src: /127.0.0.1:36480 dest: /127.0.0.1:34883
2020-06-25 02:15:01,552 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741891_1067, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36480, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741891_1067, duration(ns): 848728
2020-06-25 02:15:01,552 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741891_1067, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741891_1067, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,553 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741892_1068, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,554 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,555 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36482 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741892_1068]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741892_1068 src: /127.0.0.1:36482 dest: /127.0.0.1:34883
2020-06-25 02:15:01,557 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741892_1068, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36482, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741892_1068, duration(ns): 798989
2020-06-25 02:15:01,558 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741892_1068, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741892_1068, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,559 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741893_1069, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,560 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,561 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36484 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741893_1069]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741893_1069 src: /127.0.0.1:36484 dest: /127.0.0.1:34883
2020-06-25 02:15:01,563 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741893_1069, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36484, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741893_1069, duration(ns): 861931
2020-06-25 02:15:01,563 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741893_1069, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741893_1069, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,565 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741894_1070, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,566 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,567 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36486 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741894_1070]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741894_1070 src: /127.0.0.1:36486 dest: /127.0.0.1:34883
2020-06-25 02:15:01,569 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741894_1070, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36486, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741894_1070, duration(ns): 758375
2020-06-25 02:15:01,569 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741894_1070, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741894_1070, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,570 [IPC Server handler 0 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741895_1071, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,572 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,572 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36488 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741895_1071]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741895_1071 src: /127.0.0.1:36488 dest: /127.0.0.1:34883
2020-06-25 02:15:01,574 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741895_1071, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36488, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741895_1071, duration(ns): 695272
2020-06-25 02:15:01,575 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741895_1071, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741895_1071, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,576 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741896_1072, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,577 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,578 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36490 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741896_1072]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741896_1072 src: /127.0.0.1:36490 dest: /127.0.0.1:34883
2020-06-25 02:15:01,580 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741896_1072, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36490, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741896_1072, duration(ns): 689433
2020-06-25 02:15:01,580 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741896_1072, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741896_1072, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,581 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741897_1073, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,582 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,583 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36492 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741897_1073]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741897_1073 src: /127.0.0.1:36492 dest: /127.0.0.1:34883
2020-06-25 02:15:01,585 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741897_1073, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36492, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741897_1073, duration(ns): 682661
2020-06-25 02:15:01,585 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741897_1073, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741897_1073, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,587 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741898_1074, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,588 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,589 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36494 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741898_1074]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741898_1074 src: /127.0.0.1:36494 dest: /127.0.0.1:34883
2020-06-25 02:15:01,591 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741898_1074, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36494, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741898_1074, duration(ns): 830861
2020-06-25 02:15:01,591 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741898_1074, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741898_1074, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,592 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741899_1075, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,594 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,594 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36496 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741899_1075]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741899_1075 src: /127.0.0.1:36496 dest: /127.0.0.1:34883
2020-06-25 02:15:01,605 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741899_1075, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36496, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741899_1075, duration(ns): 2819009
2020-06-25 02:15:01,605 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741899_1075, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741899_1075, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,615 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741900_1076, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,619 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,620 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36498 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741900_1076]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741900_1076 src: /127.0.0.1:36498 dest: /127.0.0.1:34883
2020-06-25 02:15:01,622 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741900_1076, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36498, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741900_1076, duration(ns): 759611
2020-06-25 02:15:01,622 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741900_1076, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741900_1076, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,624 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741901_1077, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,625 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,626 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36500 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741901_1077]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741901_1077 src: /127.0.0.1:36500 dest: /127.0.0.1:34883
2020-06-25 02:15:01,628 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741901_1077, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36500, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741901_1077, duration(ns): 706931
2020-06-25 02:15:01,628 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741901_1077, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741901_1077, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,630 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741902_1078, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,631 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,632 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36502 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741902_1078]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741902_1078 src: /127.0.0.1:36502 dest: /127.0.0.1:34883
2020-06-25 02:15:01,634 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741902_1078, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36502, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741902_1078, duration(ns): 683871
2020-06-25 02:15:01,635 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741902_1078, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741902_1078, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,637 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741903_1079, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,638 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,639 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36504 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741903_1079]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741903_1079 src: /127.0.0.1:36504 dest: /127.0.0.1:34883
2020-06-25 02:15:01,641 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741903_1079, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36504, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741903_1079, duration(ns): 812193
2020-06-25 02:15:01,642 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741903_1079, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741903_1079, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,643 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741904_1080, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,644 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,645 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36506 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741904_1080]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741904_1080 src: /127.0.0.1:36506 dest: /127.0.0.1:34883
2020-06-25 02:15:01,647 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741904_1080, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36506, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741904_1080, duration(ns): 885107
2020-06-25 02:15:01,648 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741904_1080, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741904_1080, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,649 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741905_1081, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,650 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,651 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36508 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741905_1081]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741905_1081 src: /127.0.0.1:36508 dest: /127.0.0.1:34883
2020-06-25 02:15:01,653 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741905_1081, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36508, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741905_1081, duration(ns): 839885
2020-06-25 02:15:01,653 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741905_1081, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741905_1081, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,655 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741906_1082, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,656 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,657 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36510 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741906_1082]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741906_1082 src: /127.0.0.1:36510 dest: /127.0.0.1:34883
2020-06-25 02:15:01,659 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741906_1082, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36510, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741906_1082, duration(ns): 791864
2020-06-25 02:15:01,659 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741906_1082, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741906_1082, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,661 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741907_1083, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,662 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,663 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36512 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741907_1083]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741907_1083 src: /127.0.0.1:36512 dest: /127.0.0.1:34883
2020-06-25 02:15:01,665 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741907_1083, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36512, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741907_1083, duration(ns): 812796
2020-06-25 02:15:01,666 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741907_1083, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741907_1083, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,667 [IPC Server handler 7 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741908_1084, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,668 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,669 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36514 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741908_1084]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741908_1084 src: /127.0.0.1:36514 dest: /127.0.0.1:34883
2020-06-25 02:15:01,671 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741908_1084, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36514, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741908_1084, duration(ns): 647515
2020-06-25 02:15:01,672 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741908_1084, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741908_1084, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,673 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741909_1085, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,675 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,676 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36516 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741909_1085]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741909_1085 src: /127.0.0.1:36516 dest: /127.0.0.1:34883
2020-06-25 02:15:01,678 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741909_1085, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36516, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741909_1085, duration(ns): 733594
2020-06-25 02:15:01,678 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741909_1085, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741909_1085, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,680 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741910_1086, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,681 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,682 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36518 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741910_1086]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741910_1086 src: /127.0.0.1:36518 dest: /127.0.0.1:34883
2020-06-25 02:15:01,685 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741910_1086, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36518, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741910_1086, duration(ns): 1267162
2020-06-25 02:15:01,685 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741910_1086, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741910_1086, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,687 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741911_1087, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,688 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,689 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36520 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741911_1087]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741911_1087 src: /127.0.0.1:36520 dest: /127.0.0.1:34883
2020-06-25 02:15:01,691 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741911_1087, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36520, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741911_1087, duration(ns): 778187
2020-06-25 02:15:01,692 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741911_1087, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741911_1087, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,693 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741912_1088, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,694 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,695 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36522 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741912_1088]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741912_1088 src: /127.0.0.1:36522 dest: /127.0.0.1:34883
2020-06-25 02:15:01,697 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741912_1088, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36522, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741912_1088, duration(ns): 798824
2020-06-25 02:15:01,697 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741912_1088, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741912_1088, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,699 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741913_1089, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,700 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,700 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36524 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741913_1089]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741913_1089 src: /127.0.0.1:36524 dest: /127.0.0.1:34883
2020-06-25 02:15:01,703 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741913_1089, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36524, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741913_1089, duration(ns): 838687
2020-06-25 02:15:01,703 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741913_1089, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741913_1089, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,705 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741914_1090, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,706 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,707 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36526 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741914_1090]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741914_1090 src: /127.0.0.1:36526 dest: /127.0.0.1:34883
2020-06-25 02:15:01,709 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741914_1090, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36526, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741914_1090, duration(ns): 756060
2020-06-25 02:15:01,710 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741914_1090, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741914_1090, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,711 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741915_1091, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,712 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,713 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36528 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741915_1091]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741915_1091 src: /127.0.0.1:36528 dest: /127.0.0.1:34883
2020-06-25 02:15:01,715 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741915_1091, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36528, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741915_1091, duration(ns): 810179
2020-06-25 02:15:01,716 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741915_1091, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741915_1091, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,717 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741916_1092, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,718 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,719 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36530 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741916_1092]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741916_1092 src: /127.0.0.1:36530 dest: /127.0.0.1:34883
2020-06-25 02:15:01,721 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741916_1092, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36530, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741916_1092, duration(ns): 851158
2020-06-25 02:15:01,721 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741916_1092, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741916_1092, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,723 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741917_1093, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,724 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,725 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36532 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741917_1093]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741917_1093 src: /127.0.0.1:36532 dest: /127.0.0.1:34883
2020-06-25 02:15:01,727 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741917_1093, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36532, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741917_1093, duration(ns): 863154
2020-06-25 02:15:01,727 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741917_1093, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741917_1093, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,729 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741918_1094, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,730 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,730 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36534 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741918_1094]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741918_1094 src: /127.0.0.1:36534 dest: /127.0.0.1:34883
2020-06-25 02:15:01,733 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741918_1094, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36534, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741918_1094, duration(ns): 764059
2020-06-25 02:15:01,733 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741918_1094, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741918_1094, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,734 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741919_1095, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,735 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,736 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36536 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741919_1095]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741919_1095 src: /127.0.0.1:36536 dest: /127.0.0.1:34883
2020-06-25 02:15:01,738 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741919_1095, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36536, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741919_1095, duration(ns): 800965
2020-06-25 02:15:01,739 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741919_1095, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741919_1095, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,740 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741920_1096, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,741 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,742 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36538 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741920_1096]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741920_1096 src: /127.0.0.1:36538 dest: /127.0.0.1:34883
2020-06-25 02:15:01,744 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741920_1096, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36538, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741920_1096, duration(ns): 818062
2020-06-25 02:15:01,744 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741920_1096, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741920_1096, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,746 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741921_1097, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,747 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,748 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36540 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741921_1097]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741921_1097 src: /127.0.0.1:36540 dest: /127.0.0.1:34883
2020-06-25 02:15:01,750 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741921_1097, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36540, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741921_1097, duration(ns): 875800
2020-06-25 02:15:01,750 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741921_1097, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741921_1097, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,752 [IPC Server handler 5 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741922_1098, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,753 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,754 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36542 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741922_1098]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741922_1098 src: /127.0.0.1:36542 dest: /127.0.0.1:34883
2020-06-25 02:15:01,756 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741922_1098, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36542, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741922_1098, duration(ns): 910532
2020-06-25 02:15:01,756 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741922_1098, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741922_1098, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,757 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741923_1099, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,758 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,759 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36544 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741923_1099]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741923_1099 src: /127.0.0.1:36544 dest: /127.0.0.1:34883
2020-06-25 02:15:01,761 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741923_1099, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36544, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741923_1099, duration(ns): 750262
2020-06-25 02:15:01,761 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741923_1099, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741923_1099, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,763 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (FSDirWriteFileOp.java:logAllocatedBlock(798)) - BLOCK* allocate blk_1073741924_1100, replicas=127.0.0.1:34883 for /tmp.txt
2020-06-25 02:15:01,764 [DataStreamer for file /tmp.txt] INFO  sasl.SaslDataTransferClient (SaslDataTransferClient.java:checkTrustAndSend(239)) - SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false
2020-06-25 02:15:01,764 [DataXceiver for client DFSClient_NONMAPREDUCE_1234183704_1 at /127.0.0.1:36546 [Receiving block BP-1096723371-172.17.0.11-1593051297894:blk_1073741924_1100]] INFO  datanode.DataNode (DataXceiver.java:writeBlock(747)) - Receiving BP-1096723371-172.17.0.11-1593051297894:blk_1073741924_1100 src: /127.0.0.1:36546 dest: /127.0.0.1:34883
2020-06-25 02:15:01,767 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741924_1100, type=LAST_IN_PIPELINE] INFO  DataNode.clienttrace (BlockReceiver.java:finalizeBlock(1533)) - src: /127.0.0.1:36546, dest: /127.0.0.1:34883, bytes: 1024, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_1234183704_1, offset: 0, srvID: ccf64283-2ed3-4ece-a868-76f6dc0e933b, blockid: BP-1096723371-172.17.0.11-1593051297894:blk_1073741924_1100, duration(ns): 767553
2020-06-25 02:15:01,767 [PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741924_1100, type=LAST_IN_PIPELINE] INFO  datanode.DataNode (BlockReceiver.java:run(1506)) - PacketResponder: BP-1096723371-172.17.0.11-1593051297894:blk_1073741924_1100, type=LAST_IN_PIPELINE terminating
2020-06-25 02:15:01,775 [IPC Server handler 1 on default port 41763] INFO  hdfs.StateChange (FSNamesystem.java:completeFile(2948)) - DIR* completeFile: /tmp.txt is closed by DFSClient_NONMAPREDUCE_1234183704_1
2020-06-25 02:15:01,786 [IPC Server handler 3 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=getfileinfo	src=/tmp.txt	dst=null	perm=null	proto=rpc
2020-06-25 02:15:01,800 [IPC Server handler 2 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=open	src=/tmp.txt	dst=null	perm=null	proto=rpc
All blocks of file /tmp.txt verified to have replication factor 1
2020-06-25 02:15:01,831 [IPC Server handler 4 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=getfileinfo	src=/tmp.txt	dst=null	perm=null	proto=rpc
2020-06-25 02:15:01,835 [IPC Server handler 5 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=open	src=/tmp.txt	dst=null	perm=null	proto=rpc
All blocks of file /tmp.txt verified to have replication factor 1
msx-debug TestDiskBalancer before cluster.restartDataNodes() after waitReplication
msx-debug stopDataNode
java.lang.Exception
	at org.apache.hadoop.hdfs.MiniDFSCluster.stopDataNode(MiniDFSCluster.java:2327)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNode(MiniDFSCluster.java:2486)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNode(MiniDFSCluster.java:2473)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNodes(MiniDFSCluster.java:2521)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNodes(MiniDFSCluster.java:2532)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$ClusterBuilder.generateData(TestDiskBalancer.java:478)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$ClusterBuilder.build(TestDiskBalancer.java:462)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer.testDiskBalancerEndToEnd(TestDiskBalancer.java:155)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2020-06-25 02:15:01,857 [Listener at localhost/45402] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:stopDataNode(2334)) - MiniDFSCluster Stopping DataNode 127.0.0.1:34883 from a total of 1 datanodes.
2020-06-25 02:15:01,858 [Listener at localhost/45402] WARN  datanode.DirectoryScanner (DirectoryScanner.java:shutdown(343)) - DirectoryScanner: shutdown has been called
2020-06-25 02:15:01,858 [org.apache.hadoop.hdfs.server.datanode.DataXceiverServer@7bb6ab3a] INFO  datanode.DataNode (DataXceiverServer.java:closeAllPeers(281)) - Closing all peers.
2020-06-25 02:15:01,859 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc) exiting.
2020-06-25 02:15:01,859 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84) exiting.
2020-06-25 02:15:01,891 [Listener at localhost/45402] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.w.WebAppContext@758a34ce{/,null,UNAVAILABLE}{/datanode}
2020-06-25 02:15:01,897 [Listener at localhost/45402] INFO  server.AbstractConnector (AbstractConnector.java:doStop(318)) - Stopped ServerConnector@7ec3394b{HTTP/1.1,[http/1.1]}{localhost:0}
2020-06-25 02:15:01,898 [Listener at localhost/45402] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@25bc0606{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,UNAVAILABLE}
2020-06-25 02:15:01,898 [Listener at localhost/45402] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@784b990c{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,UNAVAILABLE}
2020-06-25 02:15:01,902 [Listener at localhost/45402] INFO  ipc.Server (Server.java:stop(3359)) - Stopping server on 45402
2020-06-25 02:15:01,903 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1330)) - Stopping IPC Server listener on 0
2020-06-25 02:15:01,903 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1465)) - Stopping IPC Server Responder
2020-06-25 02:15:01,904 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.IncrementalBlockReportManager (IncrementalBlockReportManager.java:waitTillNextIBR(160)) - IncrementalBlockReportManager interrupted
2020-06-25 02:15:01,905 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.DataNode (BPServiceActor.java:run(860)) - Ending block pool service for: Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763
2020-06-25 02:15:01,905 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BlockPoolManager.java:remove(102)) - Removed Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b)
2020-06-25 02:15:01,905 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:shutdownBlockPool(2814)) - Removing block pool BP-1096723371-172.17.0.11-1593051297894
msx-debug saveDfsUsed 76326 1593051301907
2020-06-25 02:15:01,908 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
msx-debug saveDfsUsed 76326 1593051301908
2020-06-25 02:15:01,908 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
2020-06-25 02:15:01,909 [Listener at localhost/45402] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(193)) - Shutting down all async disk service threads
2020-06-25 02:15:01,910 [Listener at localhost/45402] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(201)) - All async disk service threads have been shut down
2020-06-25 02:15:01,910 [Listener at localhost/45402] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(177)) - Shutting down all async lazy persist service threads
2020-06-25 02:15:01,910 [Listener at localhost/45402] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(184)) - All async lazy persist service threads have been shut down
2020-06-25 02:15:01,911 [Listener at localhost/45402] INFO  datanode.DataNode (DataNode.java:shutdown(2170)) - Shutdown complete.
2020-06-25 02:15:01,914 [Listener at localhost/45402] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:01,915 [Listener at localhost/45402] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:01,928 [Listener at localhost/45402] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:init(158)) - DataNode metrics system started (again)
msx-reconfagent conf 1123559518 itself is unique for hdfs:DataNode 1189651769
msx-reconfagent performReconf for comoponent hdfs:DataNode 1189651769 uniqueConf 1123559518 originConf 1123559518
msx-reconfagent hdfs:DataNode init 1189651769, vvmode is v1v1. Set value as v1 100
2020-06-25 02:15:01,929 [Listener at localhost/45402] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:15:01,930 [Listener at localhost/45402] INFO  datanode.BlockScanner (BlockScanner.java:<init>(184)) - Initialized block scanner with targetBytesPerSec 1048576
2020-06-25 02:15:01,930 [Listener at localhost/45402] INFO  datanode.DataNode (DataNode.java:<init>(506)) - Configured hostname is 127.0.0.1
2020-06-25 02:15:01,931 [Listener at localhost/45402] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:15:01,931 [Listener at localhost/45402] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:15:01,931 [Listener at localhost/45402] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:15:01,931 [Listener at localhost/45402] INFO  datanode.DataNode (DataNode.java:startDataNode(1406)) - Starting DataNode with maxLockedMemory = 0
2020-06-25 02:15:01,933 [Listener at localhost/45402] INFO  datanode.DataNode (DataNode.java:initDataXceiver(1154)) - Opened streaming server at /127.0.0.1:45099
2020-06-25 02:15:01,933 [Listener at localhost/45402] INFO  datanode.DataNode (DataXceiverServer.java:<init>(78)) - Balancing bandwidth is 10485760 bytes/s
2020-06-25 02:15:01,933 [Listener at localhost/45402] INFO  datanode.DataNode (DataXceiverServer.java:<init>(79)) - Number threads for balancing is 50
2020-06-25 02:15:01,935 [Listener at localhost/45402] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:15:01,938 [Listener at localhost/45402] INFO  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets.
2020-06-25 02:15:01,939 [Listener at localhost/45402] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(81)) - Http request log for http.requests.datanode is not defined
2020-06-25 02:15:01,940 [Listener at localhost/45402] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:15:01,943 [Listener at localhost/45402] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(990)) - Added global filter 'safety' (class=org.apache.hadoop.http.HttpServer2$QuotingInputFilter)
2020-06-25 02:15:01,944 [Listener at localhost/45402] INFO  http.HttpServer2 (HttpServer2.java:addFilter(963)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context datanode
2020-06-25 02:15:01,945 [Listener at localhost/45402] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2020-06-25 02:15:01,945 [Listener at localhost/45402] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2020-06-25 02:15:01,946 [Listener at localhost/45402] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1206)) - Jetty bound to port 45946
2020-06-25 02:15:01,946 [Listener at localhost/45402] INFO  server.Server (Server.java:doStart(351)) - jetty-9.3.24.v20180605, build timestamp: 2018-06-05T17:11:56Z, git hash: 84205aa28f11a4f31f2a3b86d1bba2cc8ab69827
2020-06-25 02:15:01,949 [Listener at localhost/45402] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@65e61854{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,AVAILABLE}
2020-06-25 02:15:01,950 [Listener at localhost/45402] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@4fcee388{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,AVAILABLE}
2020-06-25 02:15:01,958 [Listener at localhost/45402] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.w.WebAppContext@25bcd0c7{/,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/datanode/,AVAILABLE}{/datanode}
2020-06-25 02:15:01,959 [Listener at localhost/45402] INFO  server.AbstractConnector (AbstractConnector.java:doStart(278)) - Started ServerConnector@32cb636e{HTTP/1.1,[http/1.1]}{localhost:45946}
2020-06-25 02:15:01,960 [Listener at localhost/45402] INFO  server.Server (Server.java:doStart(419)) - Started @5336ms
2020-06-25 02:15:02,000 [Listener at localhost/45402] INFO  web.DatanodeHttpServer (DatanodeHttpServer.java:start(255)) - Listening HTTP traffic on /127.0.0.1:46036
2020-06-25 02:15:02,001 [org.apache.hadoop.util.JvmPauseMonitor$Monitor@40dd3977] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(188)) - Starting JVM pause monitor
2020-06-25 02:15:02,001 [Listener at localhost/45402] INFO  datanode.DataNode (DataNode.java:startDataNode(1434)) - dnUserName = root
2020-06-25 02:15:02,001 [Listener at localhost/45402] INFO  datanode.DataNode (DataNode.java:startDataNode(1435)) - supergroup = supergroup
2020-06-25 02:15:02,003 [Listener at localhost/45402] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(84)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 1000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2020-06-25 02:15:02,005 [Socket Reader #1 for port 0] INFO  ipc.Server (Server.java:run(1219)) - Starting Socket Reader #1 for port 0
2020-06-25 02:15:02,013 [Listener at localhost/39936] INFO  datanode.DataNode (DataNode.java:initIpcServer(1040)) - Opened IPC server at /127.0.0.1:39936
2020-06-25 02:15:02,021 [Listener at localhost/39936] INFO  datanode.DataNode (BlockPoolManager.java:refreshNamenodes(149)) - Refresh request received for nameservices: null
2020-06-25 02:15:02,021 [Listener at localhost/39936] INFO  datanode.DataNode (BlockPoolManager.java:doRefreshNamenodes(210)) - Starting BPOfferServices for nameservices: <default>
2020-06-25 02:15:02,022 [Thread-405] INFO  datanode.DataNode (BPServiceActor.java:run(817)) - Block pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763 starting to offer service
2020-06-25 02:15:02,024 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1460)) - IPC Server Responder: starting
2020-06-25 02:15:02,024 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1298)) - IPC Server listener on 0: starting
2020-06-25 02:15:02,028 [Thread-405] INFO  datanode.DataNode (BPOfferService.java:verifyAndSetNamespaceInfo(378)) - Acknowledging ACTIVE Namenode during handshakeBlock pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763
2020-06-25 02:15:02,029 [Thread-405] INFO  common.Storage (DataStorage.java:getParallelVolumeLoadThreadsNum(354)) - Using 2 threads to upgrade data directories (dfs.datanode.parallel.volumes.load.threads.num=2, dataDirs=2)
2020-06-25 02:15:02,031 [Thread-405] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:15:02,033 [Thread-405] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:15:02,057 [Thread-405] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,058 [Thread-405] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,082 [Thread-405] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,083 [Thread-405] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,084 [Thread-405] INFO  datanode.DataNode (DataNode.java:initStorage(1752)) - Setting up storage: nsid=1824630191;bpid=BP-1096723371-172.17.0.11-1593051297894;lv=-57;nsInfo=lv=-65;cid=testClusterID;nsid=1824630191;c=1593051297894;bpid=BP-1096723371-172.17.0.11-1593051297894;dnuuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,088 [Thread-405] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:02,089 [Thread-405] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, StorageType: DISK
2020-06-25 02:15:02,091 [Thread-405] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:02,091 [Thread-405] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, StorageType: DISK
2020-06-25 02:15:02,093 [Thread-405] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:registerMBean(2280)) - Registered FSDatasetState MBean
2020-06-25 02:15:02,094 [Thread-405] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:02,095 [Thread-405] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:02,095 [Thread-405] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:02,096 [Thread-405] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:02,096 [Thread-405] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addBlockPool(2791)) - Adding block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,097 [Thread-420] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:02,097 [Thread-421] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug mtime = 1593051301907, timer.now() - mtime = 195
msx-debug mtime = 1593051301908, timer.now() - mtime = 194
msx-debug cachedDfsUsedCheckTime = 100
msx-debug cachedDfsUsedCheckTime = 100
msx-debug return -1
msx-debug return -1
msx-debug GetSpaceUsed:build()
msx-debug GetSpaceUsed:build()
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug DU:refresh()
msx-debug BlockPoolSlice<init> after get this.dfsUsage
msx-debug DU:refresh()
java.lang.Exception
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
msx-debug BlockPoolSlice<init> after get this.dfsUsage
msx-debug this.dfsUsage.getUsed() = 454656
java.lang.Exception
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
msx-debug this.dfsUsage.getUsed() = 454656
2020-06-25 02:15:02,132 [Thread-420] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 35ms
2020-06-25 02:15:02,132 [Thread-421] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 34ms
2020-06-25 02:15:02,132 [Thread-405] INFO  impl.FsDatasetImpl (FsVolumeList.java:addBlockPool(431)) - Total time to scan all replicas for block pool BP-1096723371-172.17.0.11-1593051297894: 35ms
2020-06-25 02:15:02,133 [Thread-424] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:02,133 [Thread-425] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
2020-06-25 02:15:02,138 [Thread-424] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(936)) - Successfully read replica from cache file : /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas
2020-06-25 02:15:02,138 [Thread-425] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(936)) - Successfully read replica from cache file : /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas
2020-06-25 02:15:02,138 [Thread-424] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 5ms
2020-06-25 02:15:02,138 [Thread-425] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 5ms
2020-06-25 02:15:02,138 [Thread-405] INFO  impl.FsDatasetImpl (FsVolumeList.java:getAllVolumesMap(225)) - Total time to add all replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894: 5ms
2020-06-25 02:15:02,158 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84): no suitable block pools found to scan.  Waiting 1814397997 ms.
2020-06-25 02:15:02,158 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc): no suitable block pools found to scan.  Waiting 1814397998 ms.
2020-06-25 02:15:02,158 [Thread-405] INFO  datanode.DirectoryScanner (DirectoryScanner.java:start(284)) - Periodic Directory Tree Verification scan starting at 6/25/20 8:09 AM with interval of 21600000ms
2020-06-25 02:15:02,160 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(767)) - Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 beginning handshake with NN
2020-06-25 02:15:02,162 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1042)) - BLOCK* registerDatanode: from DatanodeRegistration(127.0.0.1:45099, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=46036, infoSecurePort=0, ipcPort=39936, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894) storage ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,162 [IPC Server handler 6 on default port 41763] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1078)) - BLOCK* registerDatanode: 127.0.0.1:34883 is replaced by DatanodeRegistration(127.0.0.1:45099, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=46036, infoSecurePort=0, ipcPort=39936, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894) with the same storageID ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,162 [IPC Server handler 6 on default port 41763] INFO  net.NetworkTopology (NetworkTopology.java:remove(219)) - Removing a node: /default-rack/127.0.0.1:34883
2020-06-25 02:15:02,163 [IPC Server handler 6 on default port 41763] INFO  net.NetworkTopology (NetworkTopology.java:add(145)) - Adding a new node: /default-rack/127.0.0.1:45099
2020-06-25 02:15:02,164 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(786)) - Block pool Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 successfully registered with NN
2020-06-25 02:15:02,164 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:offerService(616)) - For namenode localhost/127.0.0.1:41763 using BLOCKREPORT_INTERVAL of 21600000msec CACHEREPORT_INTERVAL of 10000msec Initial delay: 0msec; heartBeatInterval=1000
2020-06-25 02:15:02,169 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0xbe8708025bfbf00b: Processing first storage report for DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,172 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0xbe8708025bfbf00b: from storage DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 node DatanodeRegistration(127.0.0.1:45099, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=46036, infoSecurePort=0, ipcPort=39936, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 50, hasStaleStorage: false, processing time: 3 msecs, invalidatedBlocks: 0
2020-06-25 02:15:02,172 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0xbe8708025bfbf00b: Processing first storage report for DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,175 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0xbe8708025bfbf00b: from storage DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc node DatanodeRegistration(127.0.0.1:45099, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=46036, infoSecurePort=0, ipcPort=39936, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 50, hasStaleStorage: false, processing time: 2 msecs, invalidatedBlocks: 0
2020-06-25 02:15:02,176 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:blockReport(424)) - Successfully sent block report 0xbe8708025bfbf00b,  containing 2 storage report(s), of which we sent 2. The reports had 100 total blocks and used 1 RPC(s). This took 0 msec to generate and 8 msecs for RPC and NN processing. Got back one command: FinalizeCommand/5.
2020-06-25 02:15:02,176 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPOfferService.java:processCommandFromActive(759)) - Got finalize command for block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,228 [Listener at localhost/39936] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:02,229 [Listener at localhost/39936] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:02,329 [Listener at localhost/39936] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:restartDataNodes(2523)) - Restarted DataNode 0
2020-06-25 02:15:02,331 [IPC Server handler 1 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=datanodeReport	src=null	dst=null	perm=null	proto=rpc
2020-06-25 02:15:02,332 [Listener at localhost/39936] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:waitActive(2762)) - Cluster is active
msx-debug TestDiskBalancer after generateData in build()
msx-debug stopDataNode
java.lang.Exception
	at org.apache.hadoop.hdfs.MiniDFSCluster.stopDataNode(MiniDFSCluster.java:2327)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNode(MiniDFSCluster.java:2486)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNode(MiniDFSCluster.java:2473)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNodes(MiniDFSCluster.java:2521)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNodes(MiniDFSCluster.java:2532)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$ClusterBuilder.build(TestDiskBalancer.java:464)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer.testDiskBalancerEndToEnd(TestDiskBalancer.java:155)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2020-06-25 02:15:02,333 [Listener at localhost/39936] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:stopDataNode(2334)) - MiniDFSCluster Stopping DataNode 127.0.0.1:45099 from a total of 1 datanodes.
2020-06-25 02:15:02,334 [Listener at localhost/39936] WARN  datanode.DirectoryScanner (DirectoryScanner.java:shutdown(343)) - DirectoryScanner: shutdown has been called
2020-06-25 02:15:02,334 [org.apache.hadoop.hdfs.server.datanode.DataXceiverServer@2b62442c] INFO  datanode.DataNode (DataXceiverServer.java:closeAllPeers(281)) - Closing all peers.
2020-06-25 02:15:02,336 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84) exiting.
2020-06-25 02:15:02,336 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc) exiting.
2020-06-25 02:15:02,409 [Listener at localhost/39936] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.w.WebAppContext@25bcd0c7{/,null,UNAVAILABLE}{/datanode}
2020-06-25 02:15:02,410 [Listener at localhost/39936] INFO  server.AbstractConnector (AbstractConnector.java:doStop(318)) - Stopped ServerConnector@32cb636e{HTTP/1.1,[http/1.1]}{localhost:0}
2020-06-25 02:15:02,410 [Listener at localhost/39936] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@4fcee388{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,UNAVAILABLE}
2020-06-25 02:15:02,412 [Listener at localhost/39936] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@65e61854{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,UNAVAILABLE}
2020-06-25 02:15:02,418 [Listener at localhost/39936] INFO  ipc.Server (Server.java:stop(3359)) - Stopping server on 39936
2020-06-25 02:15:02,422 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1330)) - Stopping IPC Server listener on 0
2020-06-25 02:15:02,422 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1465)) - Stopping IPC Server Responder
2020-06-25 02:15:02,426 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.IncrementalBlockReportManager (IncrementalBlockReportManager.java:waitTillNextIBR(160)) - IncrementalBlockReportManager interrupted
2020-06-25 02:15:02,427 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.DataNode (BPServiceActor.java:run(860)) - Ending block pool service for: Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763
2020-06-25 02:15:02,427 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BlockPoolManager.java:remove(102)) - Removed Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b)
2020-06-25 02:15:02,427 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:shutdownBlockPool(2814)) - Removing block pool BP-1096723371-172.17.0.11-1593051297894
msx-debug saveDfsUsed 454656 1593051302428
2020-06-25 02:15:02,428 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
msx-debug saveDfsUsed 454656 1593051302429
2020-06-25 02:15:02,430 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
2020-06-25 02:15:02,434 [Listener at localhost/39936] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(193)) - Shutting down all async disk service threads
2020-06-25 02:15:02,435 [Listener at localhost/39936] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(201)) - All async disk service threads have been shut down
2020-06-25 02:15:02,435 [Listener at localhost/39936] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(177)) - Shutting down all async lazy persist service threads
2020-06-25 02:15:02,436 [Listener at localhost/39936] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(184)) - All async lazy persist service threads have been shut down
2020-06-25 02:15:02,437 [Listener at localhost/39936] INFO  datanode.DataNode (DataNode.java:shutdown(2170)) - Shutdown complete.
2020-06-25 02:15:02,440 [Listener at localhost/39936] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:02,440 [Listener at localhost/39936] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:02,455 [Listener at localhost/39936] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:init(158)) - DataNode metrics system started (again)
msx-reconfagent conf 1599674462 itself is unique for hdfs:DataNode 1908781622
msx-reconfagent performReconf for comoponent hdfs:DataNode 1908781622 uniqueConf 1599674462 originConf 1599674462
msx-reconfagent hdfs:DataNode init 1908781622, vvmode is v1v1. Set value as v1 100
2020-06-25 02:15:02,455 [Listener at localhost/39936] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:15:02,455 [Listener at localhost/39936] INFO  datanode.BlockScanner (BlockScanner.java:<init>(184)) - Initialized block scanner with targetBytesPerSec 1048576
2020-06-25 02:15:02,456 [Listener at localhost/39936] INFO  datanode.DataNode (DataNode.java:<init>(506)) - Configured hostname is 127.0.0.1
2020-06-25 02:15:02,456 [Listener at localhost/39936] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:15:02,456 [Listener at localhost/39936] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:15:02,457 [Listener at localhost/39936] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:15:02,457 [Listener at localhost/39936] INFO  datanode.DataNode (DataNode.java:startDataNode(1406)) - Starting DataNode with maxLockedMemory = 0
2020-06-25 02:15:02,458 [Listener at localhost/39936] INFO  datanode.DataNode (DataNode.java:initDataXceiver(1154)) - Opened streaming server at /127.0.0.1:44269
2020-06-25 02:15:02,458 [Listener at localhost/39936] INFO  datanode.DataNode (DataXceiverServer.java:<init>(78)) - Balancing bandwidth is 10485760 bytes/s
2020-06-25 02:15:02,458 [Listener at localhost/39936] INFO  datanode.DataNode (DataXceiverServer.java:<init>(79)) - Number threads for balancing is 50
2020-06-25 02:15:02,459 [Listener at localhost/39936] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:15:02,461 [Listener at localhost/39936] INFO  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets.
2020-06-25 02:15:02,463 [Listener at localhost/39936] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(81)) - Http request log for http.requests.datanode is not defined
2020-06-25 02:15:02,463 [Listener at localhost/39936] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:15:02,466 [Listener at localhost/39936] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(990)) - Added global filter 'safety' (class=org.apache.hadoop.http.HttpServer2$QuotingInputFilter)
2020-06-25 02:15:02,466 [Listener at localhost/39936] INFO  http.HttpServer2 (HttpServer2.java:addFilter(963)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context datanode
2020-06-25 02:15:02,466 [Listener at localhost/39936] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2020-06-25 02:15:02,467 [Listener at localhost/39936] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2020-06-25 02:15:02,467 [Listener at localhost/39936] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1206)) - Jetty bound to port 33323
2020-06-25 02:15:02,467 [Listener at localhost/39936] INFO  server.Server (Server.java:doStart(351)) - jetty-9.3.24.v20180605, build timestamp: 2018-06-05T17:11:56Z, git hash: 84205aa28f11a4f31f2a3b86d1bba2cc8ab69827
2020-06-25 02:15:02,473 [Listener at localhost/39936] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@15a902e7{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,AVAILABLE}
2020-06-25 02:15:02,474 [Listener at localhost/39936] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@4a3e3e8b{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,AVAILABLE}
2020-06-25 02:15:02,481 [Listener at localhost/39936] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.w.WebAppContext@33617539{/,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/datanode/,AVAILABLE}{/datanode}
2020-06-25 02:15:02,483 [Listener at localhost/39936] INFO  server.AbstractConnector (AbstractConnector.java:doStart(278)) - Started ServerConnector@2c177f9e{HTTP/1.1,[http/1.1]}{localhost:33323}
2020-06-25 02:15:02,483 [Listener at localhost/39936] INFO  server.Server (Server.java:doStart(419)) - Started @5859ms
2020-06-25 02:15:02,498 [Listener at localhost/39936] INFO  web.DatanodeHttpServer (DatanodeHttpServer.java:start(255)) - Listening HTTP traffic on /127.0.0.1:37375
2020-06-25 02:15:02,499 [Listener at localhost/39936] INFO  datanode.DataNode (DataNode.java:startDataNode(1434)) - dnUserName = root
2020-06-25 02:15:02,499 [org.apache.hadoop.util.JvmPauseMonitor$Monitor@209775a9] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(188)) - Starting JVM pause monitor
2020-06-25 02:15:02,499 [Listener at localhost/39936] INFO  datanode.DataNode (DataNode.java:startDataNode(1435)) - supergroup = supergroup
2020-06-25 02:15:02,499 [Listener at localhost/39936] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(84)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 1000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2020-06-25 02:15:02,500 [Socket Reader #1 for port 0] INFO  ipc.Server (Server.java:run(1219)) - Starting Socket Reader #1 for port 0
2020-06-25 02:15:02,505 [Listener at localhost/44491] INFO  datanode.DataNode (DataNode.java:initIpcServer(1040)) - Opened IPC server at /127.0.0.1:44491
2020-06-25 02:15:02,512 [Listener at localhost/44491] INFO  datanode.DataNode (BlockPoolManager.java:refreshNamenodes(149)) - Refresh request received for nameservices: null
2020-06-25 02:15:02,513 [Listener at localhost/44491] INFO  datanode.DataNode (BlockPoolManager.java:doRefreshNamenodes(210)) - Starting BPOfferServices for nameservices: <default>
2020-06-25 02:15:02,513 [Thread-441] INFO  datanode.DataNode (BPServiceActor.java:run(817)) - Block pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763 starting to offer service
2020-06-25 02:15:02,517 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1460)) - IPC Server Responder: starting
2020-06-25 02:15:02,517 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1298)) - IPC Server listener on 0: starting
2020-06-25 02:15:02,523 [Thread-441] INFO  datanode.DataNode (BPOfferService.java:verifyAndSetNamespaceInfo(378)) - Acknowledging ACTIVE Namenode during handshakeBlock pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763
2020-06-25 02:15:02,524 [Thread-441] INFO  common.Storage (DataStorage.java:getParallelVolumeLoadThreadsNum(354)) - Using 2 threads to upgrade data directories (dfs.datanode.parallel.volumes.load.threads.num=2, dataDirs=2)
2020-06-25 02:15:02,525 [Thread-441] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:15:02,527 [Thread-441] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:15:02,559 [Thread-441] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,560 [Thread-441] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,587 [Thread-441] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,588 [Thread-441] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,589 [Thread-441] INFO  datanode.DataNode (DataNode.java:initStorage(1752)) - Setting up storage: nsid=1824630191;bpid=BP-1096723371-172.17.0.11-1593051297894;lv=-57;nsInfo=lv=-65;cid=testClusterID;nsid=1824630191;c=1593051297894;bpid=BP-1096723371-172.17.0.11-1593051297894;dnuuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,591 [Thread-441] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:02,593 [Thread-441] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, StorageType: DISK
2020-06-25 02:15:02,595 [Thread-441] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:02,596 [Thread-441] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, StorageType: DISK
2020-06-25 02:15:02,597 [Thread-441] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:registerMBean(2280)) - Registered FSDatasetState MBean
2020-06-25 02:15:02,598 [Thread-441] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:02,599 [Thread-441] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:02,599 [Thread-441] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:02,600 [Thread-441] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:02,600 [Thread-441] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addBlockPool(2791)) - Adding block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,600 [Thread-456] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:02,600 [Thread-457] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug mtime = 1593051302428, timer.now() - mtime = 175
msx-debug cachedDfsUsedCheckTime = 100
msx-debug return -1
msx-debug mtime = 1593051302429, timer.now() - mtime = 174
msx-debug cachedDfsUsedCheckTime = 100
msx-debug return -1
msx-debug GetSpaceUsed:build()
msx-debug GetSpaceUsed:build()
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug DU:refresh()
msx-debug DU:refresh()
msx-debug BlockPoolSlice<init> after get this.dfsUsage
java.lang.Exception
msx-debug BlockPoolSlice<init> after get this.dfsUsage
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
msx-debug this.dfsUsage.getUsed() = 454656
java.lang.Exception
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
msx-debug this.dfsUsage.getUsed() = 454656
2020-06-25 02:15:02,635 [Thread-456] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 36ms
2020-06-25 02:15:02,636 [Thread-457] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 35ms
2020-06-25 02:15:02,636 [Thread-441] INFO  impl.FsDatasetImpl (FsVolumeList.java:addBlockPool(431)) - Total time to scan all replicas for block pool BP-1096723371-172.17.0.11-1593051297894: 37ms
2020-06-25 02:15:02,637 [Thread-460] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:02,637 [Thread-461] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
2020-06-25 02:15:02,641 [Thread-460] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(936)) - Successfully read replica from cache file : /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas
2020-06-25 02:15:02,641 [Thread-461] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(936)) - Successfully read replica from cache file : /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas
2020-06-25 02:15:02,641 [Thread-460] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 4ms
2020-06-25 02:15:02,641 [Thread-461] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 5ms
2020-06-25 02:15:02,642 [Thread-441] INFO  impl.FsDatasetImpl (FsVolumeList.java:getAllVolumesMap(225)) - Total time to add all replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894: 5ms
2020-06-25 02:15:02,642 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84): no suitable block pools found to scan.  Waiting 1814397513 ms.
2020-06-25 02:15:02,643 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc): no suitable block pools found to scan.  Waiting 1814397513 ms.
2020-06-25 02:15:02,643 [Thread-441] INFO  datanode.DirectoryScanner (DirectoryScanner.java:start(284)) - Periodic Directory Tree Verification scan starting at 6/25/20 7:05 AM with interval of 21600000ms
2020-06-25 02:15:02,646 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(767)) - Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 beginning handshake with NN
2020-06-25 02:15:02,647 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1042)) - BLOCK* registerDatanode: from DatanodeRegistration(127.0.0.1:44269, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=37375, infoSecurePort=0, ipcPort=44491, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894) storage ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,647 [IPC Server handler 2 on default port 41763] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1078)) - BLOCK* registerDatanode: 127.0.0.1:45099 is replaced by DatanodeRegistration(127.0.0.1:44269, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=37375, infoSecurePort=0, ipcPort=44491, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894) with the same storageID ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,647 [IPC Server handler 2 on default port 41763] INFO  net.NetworkTopology (NetworkTopology.java:remove(219)) - Removing a node: /default-rack/127.0.0.1:45099
2020-06-25 02:15:02,648 [IPC Server handler 2 on default port 41763] INFO  net.NetworkTopology (NetworkTopology.java:add(145)) - Adding a new node: /default-rack/127.0.0.1:44269
2020-06-25 02:15:02,648 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(786)) - Block pool Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 successfully registered with NN
2020-06-25 02:15:02,649 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:offerService(616)) - For namenode localhost/127.0.0.1:41763 using BLOCKREPORT_INTERVAL of 21600000msec CACHEREPORT_INTERVAL of 10000msec Initial delay: 0msec; heartBeatInterval=1000
2020-06-25 02:15:02,654 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0xf1a7b60b54e6799a: Processing first storage report for DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,656 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0xf1a7b60b54e6799a: from storage DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 node DatanodeRegistration(127.0.0.1:44269, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=37375, infoSecurePort=0, ipcPort=44491, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 50, hasStaleStorage: false, processing time: 2 msecs, invalidatedBlocks: 0
2020-06-25 02:15:02,656 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0xf1a7b60b54e6799a: Processing first storage report for DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:02,658 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0xf1a7b60b54e6799a: from storage DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc node DatanodeRegistration(127.0.0.1:44269, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=37375, infoSecurePort=0, ipcPort=44491, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 50, hasStaleStorage: false, processing time: 1 msecs, invalidatedBlocks: 0
2020-06-25 02:15:02,660 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:blockReport(424)) - Successfully sent block report 0xf1a7b60b54e6799a,  containing 2 storage report(s), of which we sent 2. The reports had 100 total blocks and used 1 RPC(s). This took 0 msec to generate and 6 msecs for RPC and NN processing. Got back one command: FinalizeCommand/5.
2020-06-25 02:15:02,660 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPOfferService.java:processCommandFromActive(759)) - Got finalize command for block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:02,723 [Listener at localhost/44491] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:02,723 [Listener at localhost/44491] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:02,823 [Listener at localhost/44491] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:restartDataNodes(2523)) - Restarted DataNode 0
2020-06-25 02:15:02,826 [IPC Server handler 6 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=datanodeReport	src=null	dst=null	perm=null	proto=rpc
2020-06-25 02:15:02,826 [Listener at localhost/44491] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:waitActive(2762)) - Cluster is active
msx-debug TestDiskBalancer after build() done

msx-debug
msx-debug TestDiskBalancer before dataMover.moveDataToSourceDisk()
2020-06-25 02:15:02,841 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741826_1002 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,847 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741828_1004 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,850 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741830_1006 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,854 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741832_1008 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,857 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741834_1010 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,860 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741836_1012 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,863 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741838_1014 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,865 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741840_1016 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,867 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741842_1018 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,869 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741844_1020 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,871 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741846_1022 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,873 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741848_1024 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,874 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741850_1026 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,876 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741852_1028 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,877 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741854_1030 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,879 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741856_1032 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,880 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741858_1034 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,882 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741860_1036 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,884 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741862_1038 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,885 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741864_1040 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,886 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741866_1042 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,888 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741868_1044 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,889 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741870_1046 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,891 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741872_1048 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,892 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741874_1050 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,894 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741876_1052 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,895 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741878_1054 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,897 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741880_1056 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,898 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741882_1058 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,899 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741884_1060 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,900 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741886_1062 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,902 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741888_1064 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,903 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741890_1066 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,904 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741892_1068 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,906 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741894_1070 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,907 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741896_1072 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,909 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741898_1074 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,910 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741900_1076 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,911 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741902_1078 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,912 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741904_1080 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,913 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741906_1082 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,915 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741908_1084 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,916 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741910_1086 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,917 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741912_1088 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,918 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741914_1090 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,919 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741916_1092 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,920 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741918_1094 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,921 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741920_1096 moved to storageType DISK on node 127.0.0.1:44269
2020-06-25 02:15:02,922 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741922_1098 moved to storageType DISK on node 127.0.0.1:44269
msx-debug stopDataNode
java.lang.Exception
	at org.apache.hadoop.hdfs.MiniDFSCluster.stopDataNode(MiniDFSCluster.java:2327)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNode(MiniDFSCluster.java:2486)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNode(MiniDFSCluster.java:2473)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNodes(MiniDFSCluster.java:2521)
	at org.apache.hadoop.hdfs.MiniDFSCluster.restartDataNodes(MiniDFSCluster.java:2532)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$DataMover.moveDataToSourceDisk(TestDiskBalancer.java:519)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer.testDiskBalancerEndToEnd(TestDiskBalancer.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
2020-06-25 02:15:02,923 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741924_1100 moved to storageType DISK on node 127.0.0.1:44269
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2020-06-25 02:15:02,924 [Listener at localhost/44491] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:stopDataNode(2334)) - MiniDFSCluster Stopping DataNode 127.0.0.1:44269 from a total of 1 datanodes.
2020-06-25 02:15:02,924 [Listener at localhost/44491] WARN  datanode.DirectoryScanner (DirectoryScanner.java:shutdown(343)) - DirectoryScanner: shutdown has been called
2020-06-25 02:15:02,925 [org.apache.hadoop.hdfs.server.datanode.DataXceiverServer@3a1d593e] INFO  datanode.DataNode (DataXceiverServer.java:closeAllPeers(281)) - Closing all peers.
2020-06-25 02:15:02,927 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84) exiting.
2020-06-25 02:15:02,927 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc) exiting.
2020-06-25 02:15:02,951 [Listener at localhost/44491] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.w.WebAppContext@33617539{/,null,UNAVAILABLE}{/datanode}
2020-06-25 02:15:02,952 [Listener at localhost/44491] INFO  server.AbstractConnector (AbstractConnector.java:doStop(318)) - Stopped ServerConnector@2c177f9e{HTTP/1.1,[http/1.1]}{localhost:0}
2020-06-25 02:15:02,953 [Listener at localhost/44491] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@4a3e3e8b{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,UNAVAILABLE}
2020-06-25 02:15:02,954 [Listener at localhost/44491] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@15a902e7{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,UNAVAILABLE}
2020-06-25 02:15:02,959 [Listener at localhost/44491] INFO  ipc.Server (Server.java:stop(3359)) - Stopping server on 44491
2020-06-25 02:15:02,963 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1330)) - Stopping IPC Server listener on 0
2020-06-25 02:15:02,963 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1465)) - Stopping IPC Server Responder
2020-06-25 02:15:02,973 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.IncrementalBlockReportManager (IncrementalBlockReportManager.java:waitTillNextIBR(160)) - IncrementalBlockReportManager interrupted
2020-06-25 02:15:02,973 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.DataNode (BPServiceActor.java:run(860)) - Ending block pool service for: Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763
2020-06-25 02:15:02,980 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BlockPoolManager.java:remove(102)) - Removed Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b)
2020-06-25 02:15:02,981 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:shutdownBlockPool(2814)) - Removing block pool BP-1096723371-172.17.0.11-1593051297894
msx-debug saveDfsUsed 506406 1593051302982
2020-06-25 02:15:02,982 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
msx-debug saveDfsUsed 403456 1593051302982
2020-06-25 02:15:02,983 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
2020-06-25 02:15:02,990 [Listener at localhost/44491] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(193)) - Shutting down all async disk service threads
2020-06-25 02:15:02,991 [Listener at localhost/44491] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(201)) - All async disk service threads have been shut down
2020-06-25 02:15:02,993 [Listener at localhost/44491] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(177)) - Shutting down all async lazy persist service threads
2020-06-25 02:15:02,993 [Listener at localhost/44491] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(184)) - All async lazy persist service threads have been shut down
2020-06-25 02:15:02,995 [Listener at localhost/44491] INFO  datanode.DataNode (DataNode.java:shutdown(2170)) - Shutdown complete.
2020-06-25 02:15:02,997 [Listener at localhost/44491] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:02,998 [Listener at localhost/44491] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:03,022 [Listener at localhost/44491] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:init(158)) - DataNode metrics system started (again)
msx-reconfagent conf 2137642385 itself is unique for hdfs:DataNode 1442038800
msx-reconfagent performReconf for comoponent hdfs:DataNode 1442038800 uniqueConf 2137642385 originConf 2137642385
msx-reconfagent hdfs:DataNode init 1442038800, vvmode is v1v1. Set value as v1 100
2020-06-25 02:15:03,024 [Listener at localhost/44491] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:15:03,024 [Listener at localhost/44491] INFO  datanode.BlockScanner (BlockScanner.java:<init>(184)) - Initialized block scanner with targetBytesPerSec 1048576
2020-06-25 02:15:03,025 [Listener at localhost/44491] INFO  datanode.DataNode (DataNode.java:<init>(506)) - Configured hostname is 127.0.0.1
2020-06-25 02:15:03,025 [Listener at localhost/44491] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-06-25 02:15:03,025 [Listener at localhost/44491] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:15:03,025 [Listener at localhost/44491] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1424)) - No unit for dfs.heartbeat.interval(1) assuming SECONDS
2020-06-25 02:15:03,026 [Listener at localhost/44491] INFO  datanode.DataNode (DataNode.java:startDataNode(1406)) - Starting DataNode with maxLockedMemory = 0
2020-06-25 02:15:03,026 [Listener at localhost/44491] INFO  datanode.DataNode (DataNode.java:initDataXceiver(1154)) - Opened streaming server at /127.0.0.1:40314
2020-06-25 02:15:03,027 [Listener at localhost/44491] INFO  datanode.DataNode (DataXceiverServer.java:<init>(78)) - Balancing bandwidth is 10485760 bytes/s
2020-06-25 02:15:03,027 [Listener at localhost/44491] INFO  datanode.DataNode (DataXceiverServer.java:<init>(79)) - Number threads for balancing is 50
2020-06-25 02:15:03,028 [Listener at localhost/44491] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:15:03,030 [Listener at localhost/44491] INFO  server.AuthenticationFilter (AuthenticationFilter.java:constructSecretProvider(240)) - Unable to initialize FileSignerSecretProvider, falling back to use random secrets.
2020-06-25 02:15:03,031 [Listener at localhost/44491] INFO  http.HttpRequestLog (HttpRequestLog.java:getRequestLog(81)) - Http request log for http.requests.datanode is not defined
2020-06-25 02:15:03,031 [Listener at localhost/44491] INFO  http.HttpServer2 (HttpServer2.java:getWebAppsPath(1072)) - Web server is in development mode. Resources will be read from the source tree.
2020-06-25 02:15:03,034 [Listener at localhost/44491] INFO  http.HttpServer2 (HttpServer2.java:addGlobalFilter(990)) - Added global filter 'safety' (class=org.apache.hadoop.http.HttpServer2$QuotingInputFilter)
2020-06-25 02:15:03,035 [Listener at localhost/44491] INFO  http.HttpServer2 (HttpServer2.java:addFilter(963)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context datanode
2020-06-25 02:15:03,035 [Listener at localhost/44491] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context static
2020-06-25 02:15:03,035 [Listener at localhost/44491] INFO  http.HttpServer2 (HttpServer2.java:addFilter(973)) - Added filter static_user_filter (class=org.apache.hadoop.http.lib.StaticUserWebFilter$StaticUserFilter) to context logs
2020-06-25 02:15:03,036 [Listener at localhost/44491] INFO  http.HttpServer2 (HttpServer2.java:bindListener(1206)) - Jetty bound to port 39021
2020-06-25 02:15:03,036 [Listener at localhost/44491] INFO  server.Server (Server.java:doStart(351)) - jetty-9.3.24.v20180605, build timestamp: 2018-06-05T17:11:56Z, git hash: 84205aa28f11a4f31f2a3b86d1bba2cc8ab69827
2020-06-25 02:15:03,039 [Listener at localhost/44491] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@7bb3a9fe{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,AVAILABLE}
2020-06-25 02:15:03,040 [Listener at localhost/44491] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.s.ServletContextHandler@7f811d00{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,AVAILABLE}
2020-06-25 02:15:03,047 [Listener at localhost/44491] INFO  handler.ContextHandler (ContextHandler.java:doStart(781)) - Started o.e.j.w.WebAppContext@a486d78{/,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/datanode/,AVAILABLE}{/datanode}
2020-06-25 02:15:03,049 [Listener at localhost/44491] INFO  server.AbstractConnector (AbstractConnector.java:doStart(278)) - Started ServerConnector@cdc3aae{HTTP/1.1,[http/1.1]}{localhost:39021}
2020-06-25 02:15:03,050 [Listener at localhost/44491] INFO  server.Server (Server.java:doStart(419)) - Started @6426ms
2020-06-25 02:15:03,084 [Listener at localhost/44491] INFO  web.DatanodeHttpServer (DatanodeHttpServer.java:start(255)) - Listening HTTP traffic on /127.0.0.1:43528
2020-06-25 02:15:03,085 [Listener at localhost/44491] INFO  datanode.DataNode (DataNode.java:startDataNode(1434)) - dnUserName = root
2020-06-25 02:15:03,085 [Listener at localhost/44491] INFO  datanode.DataNode (DataNode.java:startDataNode(1435)) - supergroup = supergroup
2020-06-25 02:15:03,085 [org.apache.hadoop.util.JvmPauseMonitor$Monitor@5dcbb60] INFO  util.JvmPauseMonitor (JvmPauseMonitor.java:run(188)) - Starting JVM pause monitor
2020-06-25 02:15:03,086 [Listener at localhost/44491] INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(84)) - Using callQueue: class java.util.concurrent.LinkedBlockingQueue, queueCapacity: 1000, scheduler: class org.apache.hadoop.ipc.DefaultRpcScheduler, ipcBackoff: false.
2020-06-25 02:15:03,087 [Socket Reader #1 for port 0] INFO  ipc.Server (Server.java:run(1219)) - Starting Socket Reader #1 for port 0
2020-06-25 02:15:03,093 [Listener at localhost/41454] INFO  datanode.DataNode (DataNode.java:initIpcServer(1040)) - Opened IPC server at /127.0.0.1:41454
2020-06-25 02:15:03,102 [Listener at localhost/41454] INFO  datanode.DataNode (BlockPoolManager.java:refreshNamenodes(149)) - Refresh request received for nameservices: null
2020-06-25 02:15:03,102 [Listener at localhost/41454] INFO  datanode.DataNode (BlockPoolManager.java:doRefreshNamenodes(210)) - Starting BPOfferServices for nameservices: <default>
2020-06-25 02:15:03,103 [Thread-477] INFO  datanode.DataNode (BPServiceActor.java:run(817)) - Block pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763 starting to offer service
2020-06-25 02:15:03,109 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1460)) - IPC Server Responder: starting
2020-06-25 02:15:03,109 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1298)) - IPC Server listener on 0: starting
2020-06-25 02:15:03,114 [Thread-477] INFO  datanode.DataNode (BPOfferService.java:verifyAndSetNamespaceInfo(378)) - Acknowledging ACTIVE Namenode during handshakeBlock pool <registering> (Datanode Uuid unassigned) service to localhost/127.0.0.1:41763
2020-06-25 02:15:03,116 [Thread-477] INFO  common.Storage (DataStorage.java:getParallelVolumeLoadThreadsNum(354)) - Using 2 threads to upgrade data directories (dfs.datanode.parallel.volumes.load.threads.num=2, dataDirs=2)
2020-06-25 02:15:03,118 [Thread-477] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:15:03,120 [Thread-477] INFO  common.Storage (Storage.java:tryLock(923)) - Lock on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/in_use.lock acquired by nodename 137202@a70d57da85d8
2020-06-25 02:15:03,152 [Thread-477] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:03,152 [Thread-477] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:03,187 [Thread-477] INFO  common.Storage (BlockPoolSliceStorage.java:recoverTransitionRead(251)) - Analyzing storage directories for bpid BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:03,187 [Thread-477] INFO  common.Storage (Storage.java:lock(882)) - Locking is disabled for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:03,189 [Thread-477] INFO  datanode.DataNode (DataNode.java:initStorage(1752)) - Setting up storage: nsid=1824630191;bpid=BP-1096723371-172.17.0.11-1593051297894;lv=-57;nsInfo=lv=-65;cid=testClusterID;nsid=1824630191;c=1593051297894;bpid=BP-1096723371-172.17.0.11-1593051297894;dnuuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:03,192 [Thread-477] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:03,193 [Thread-477] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, StorageType: DISK
2020-06-25 02:15:03,195 [Thread-477] INFO  impl.FsDatasetImpl (FsVolumeList.java:addVolume(304)) - Added new volume: DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:03,195 [Thread-477] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addVolume(450)) - Added volume - [DISK]file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, StorageType: DISK
2020-06-25 02:15:03,197 [Thread-477] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:registerMBean(2280)) - Registered FSDatasetState MBean
2020-06-25 02:15:03,199 [Thread-477] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:03,199 [Thread-477] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1
2020-06-25 02:15:03,199 [Thread-477] INFO  checker.ThrottledAsyncChecker (ThrottledAsyncChecker.java:schedule(137)) - Scheduling a check for /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:03,200 [Thread-477] INFO  checker.DatasetVolumeChecker (DatasetVolumeChecker.java:checkAllVolumes(222)) - Scheduled health check for volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2
2020-06-25 02:15:03,201 [Thread-477] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:addBlockPool(2791)) - Adding block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:03,201 [Thread-492] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:03,202 [Thread-493] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(406)) - Scanning block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug BlockPoolSlice<init> bpDir = /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894
msx-debug BlockPoolSlice:loadDfsUsed
msx-debug mtime = 1593051302982, timer.now() - mtime = 221
msx-debug cachedDfsUsedCheckTime = 100
msx-debug return -1
msx-debug GetSpaceUsed:build()
msx-debug mtime = 1593051302982, timer.now() - mtime = 221
msx-debug cachedDfsUsedCheckTime = 100
msx-debug return -1
msx-debug GetSpaceUsed:build()
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug CachingGetSpaceUsed.java:init(), before refresh
msx-debug DU:refresh()
msx-debug DU:refresh()
msx-debug BlockPoolSlice<init> after get this.dfsUsage
msx-debug BlockPoolSlice<init> after get this.dfsUsage
java.lang.Exception
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
msx-debug this.dfsUsage.getUsed() = 40960
java.lang.Exception
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice.<init>(BlockPoolSlice.java:189)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1046)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl.addBlockPool(FsVolumeImpl.java:1038)
	at org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList$2.run(FsVolumeList.java:409)
msx-debug this.dfsUsage.getUsed() = 872448
2020-06-25 02:15:03,240 [Thread-493] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 38ms
2020-06-25 02:15:03,240 [Thread-492] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(411)) - Time taken to scan block pool BP-1096723371-172.17.0.11-1593051297894 on /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 38ms
2020-06-25 02:15:03,242 [Thread-477] INFO  impl.FsDatasetImpl (FsVolumeList.java:addBlockPool(431)) - Total time to scan all replicas for block pool BP-1096723371-172.17.0.11-1593051297894: 41ms
2020-06-25 02:15:03,242 [Thread-496] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1...
2020-06-25 02:15:03,242 [Thread-497] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(199)) - Adding replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2...
2020-06-25 02:15:03,243 [Thread-497] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(887)) - Replica Cache file: /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas doesn't exist 
2020-06-25 02:15:03,245 [Thread-497] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2: 2ms
2020-06-25 02:15:03,248 [Thread-496] INFO  impl.BlockPoolSlice (BlockPoolSlice.java:readReplicasFromCache(936)) - Successfully read replica from cache file : /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894/current/replicas
2020-06-25 02:15:03,248 [Thread-496] INFO  impl.FsDatasetImpl (FsVolumeList.java:run(204)) - Time to add replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894 on volume /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1: 5ms
2020-06-25 02:15:03,248 [Thread-477] INFO  impl.FsDatasetImpl (FsVolumeList.java:getAllVolumesMap(225)) - Total time to add all replicas to map for block pool BP-1096723371-172.17.0.11-1593051297894: 7ms
2020-06-25 02:15:03,249 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84): no suitable block pools found to scan.  Waiting 1814396906 ms.
2020-06-25 02:15:03,250 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:findNextUsableBlockIter(398)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc): no suitable block pools found to scan.  Waiting 1814396906 ms.
2020-06-25 02:15:03,250 [Thread-477] INFO  datanode.DirectoryScanner (DirectoryScanner.java:start(284)) - Periodic Directory Tree Verification scan starting at 6/25/20 7:29 AM with interval of 21600000ms
2020-06-25 02:15:03,254 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(767)) - Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 beginning handshake with NN
2020-06-25 02:15:03,255 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1042)) - BLOCK* registerDatanode: from DatanodeRegistration(127.0.0.1:40314, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=43528, infoSecurePort=0, ipcPort=41454, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894) storage ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:03,255 [IPC Server handler 8 on default port 41763] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1078)) - BLOCK* registerDatanode: 127.0.0.1:44269 is replaced by DatanodeRegistration(127.0.0.1:40314, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=43528, infoSecurePort=0, ipcPort=41454, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894) with the same storageID ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:03,255 [IPC Server handler 8 on default port 41763] INFO  net.NetworkTopology (NetworkTopology.java:remove(219)) - Removing a node: /default-rack/127.0.0.1:44269
2020-06-25 02:15:03,256 [IPC Server handler 8 on default port 41763] INFO  net.NetworkTopology (NetworkTopology.java:add(145)) - Adding a new node: /default-rack/127.0.0.1:40314
2020-06-25 02:15:03,256 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:register(786)) - Block pool Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763 successfully registered with NN
2020-06-25 02:15:03,256 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:offerService(616)) - For namenode localhost/127.0.0.1:41763 using BLOCKREPORT_INTERVAL of 21600000msec CACHEREPORT_INTERVAL of 10000msec Initial delay: 0msec; heartBeatInterval=1000
2020-06-25 02:15:03,262 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0x2ceef0fedf17d18f: Processing first storage report for DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:03,265 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0x2ceef0fedf17d18f: from storage DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84 node DatanodeRegistration(127.0.0.1:40314, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=43528, infoSecurePort=0, ipcPort=41454, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 100, hasStaleStorage: false, processing time: 2 msecs, invalidatedBlocks: 0
2020-06-25 02:15:03,265 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0x2ceef0fedf17d18f: Processing first storage report for DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc from datanode ccf64283-2ed3-4ece-a868-76f6dc0e933b
2020-06-25 02:15:03,265 [Block report processor] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0x2ceef0fedf17d18f: from storage DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc node DatanodeRegistration(127.0.0.1:40314, datanodeUuid=ccf64283-2ed3-4ece-a868-76f6dc0e933b, infoPort=43528, infoSecurePort=0, ipcPort=41454, storageInfo=lv=-57;cid=testClusterID;nsid=1824630191;c=1593051297894), blocks: 0, hasStaleStorage: false, processing time: 0 msecs, invalidatedBlocks: 0
2020-06-25 02:15:03,267 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPServiceActor.java:blockReport(424)) - Successfully sent block report 0x2ceef0fedf17d18f,  containing 2 storage report(s), of which we sent 2. The reports had 100 total blocks and used 1 RPC(s). This took 1 msec to generate and 4 msecs for RPC and NN processing. Got back one command: FinalizeCommand/5.
2020-06-25 02:15:03,267 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BPOfferService.java:processCommandFromActive(759)) - Got finalize command for block pool BP-1096723371-172.17.0.11-1593051297894
2020-06-25 02:15:03,314 [Listener at localhost/41454] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84
2020-06-25 02:15:03,314 [Listener at localhost/41454] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:setDataNodeStorageCapacities(1785)) - setCapacityForTesting 204800 for [DISK]DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc
2020-06-25 02:15:03,415 [Listener at localhost/41454] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:restartDataNodes(2523)) - Restarted DataNode 0
2020-06-25 02:15:03,417 [IPC Server handler 2 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=datanodeReport	src=null	dst=null	perm=null	proto=rpc
2020-06-25 02:15:03,417 [Listener at localhost/41454] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:waitActive(2762)) - Cluster is active
msx-debug TestDiskBalancer after dataMover.moveDataToSourceDisk()
msx-debug TestDiskBalancer before testDiskBalancerEndToEnd:generatePlan()
2020-06-25 02:15:03,472 [IPC Server handler 7 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=getfileinfo	src=/system/diskbalancer.id	dst=null	perm=null	proto=rpc
2020-06-25 02:15:03,478 [IPC Server handler 6 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=create	src=/system/diskbalancer.id	dst=null	perm=root:supergroup:rw-r--r--	proto=rpc
2020-06-25 02:15:03,480 [IPC Server handler 9 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=getfileinfo	src=/system/diskbalancer.id	dst=null	perm=null	proto=rpc
2020-06-25 02:15:03,517 [IPC Server handler 8 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=getDatanodeStorageReport	src=null	dst=null	perm=null	proto=rpc
msx-debug setUsed dfsUsedSpace = 872448, this.getCapacity = 204800
java.lang.Exception
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerVolume.setUsed(DiskBalancerVolume.java:277)
	at org.apache.hadoop.hdfs.server.diskbalancer.connectors.DBNameNodeConnector.getVolumeInfoFromStorageReports(DBNameNodeConnector.java:141)
	at org.apache.hadoop.hdfs.server.diskbalancer.connectors.DBNameNodeConnector.getNodes(DBNameNodeConnector.java:90)
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerCluster.readClusterInfo(DiskBalancerCluster.java:137)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$DataMover.generatePlan(TestDiskBalancer.java:567)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer.testDiskBalancerEndToEnd(TestDiskBalancer.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2020-06-25 02:15:03,531 [Listener at localhost/41454] WARN  datamodel.DiskBalancerVolume (DiskBalancerVolume.java:setUsed(280)) - Volume usage (872448) is greater than capacity (204800). Setting volume usage to the capacity
msx-debug setUsed dfsUsedSpace = 40960, this.getCapacity = 204800
java.lang.Exception
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerVolume.setUsed(DiskBalancerVolume.java:277)
	at org.apache.hadoop.hdfs.server.diskbalancer.connectors.DBNameNodeConnector.getVolumeInfoFromStorageReports(DBNameNodeConnector.java:141)
	at org.apache.hadoop.hdfs.server.diskbalancer.connectors.DBNameNodeConnector.getNodes(DBNameNodeConnector.java:90)
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerCluster.readClusterInfo(DiskBalancerCluster.java:137)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$DataMover.generatePlan(TestDiskBalancer.java:567)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer.testDiskBalancerEndToEnd(TestDiskBalancer.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2020-06-25 02:15:03,575 [pool-57-thread-1] INFO  planner.GreedyPlanner (GreedyPlanner.java:plan(70)) - Starting plan for Node : 127.0.0.1:41454
msx-debug setUsed dfsUsedSpace = 122880, this.getCapacity = 204800
java.lang.Exception
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerVolume.setUsed(DiskBalancerVolume.java:277)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.GreedyPlanner.applyStep(GreedyPlanner.java:153)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.GreedyPlanner.balanceVolumeSet(GreedyPlanner.java:118)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.GreedyPlanner.plan(GreedyPlanner.java:74)
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerCluster$1.call(DiskBalancerCluster.java:324)
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerCluster$1.call(DiskBalancerCluster.java:320)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
msx-debug setUsed dfsUsedSpace = 122880, this.getCapacity = 204800
java.lang.Exception
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerVolume.setUsed(DiskBalancerVolume.java:277)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.GreedyPlanner.applyStep(GreedyPlanner.java:156)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.GreedyPlanner.balanceVolumeSet(GreedyPlanner.java:118)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.GreedyPlanner.plan(GreedyPlanner.java:74)
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerCluster$1.call(DiskBalancerCluster.java:324)
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerCluster$1.call(DiskBalancerCluster.java:320)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-06-25 02:15:03,577 [pool-57-thread-1] INFO  planner.GreedyPlanner (GreedyPlanner.java:balanceVolumeSet(134)) - Disk Volume set 1558f588-2eaf-4aed-aec1-d540455319a2 Type : DISK plan completed.
2020-06-25 02:15:03,577 [pool-57-thread-1] INFO  planner.GreedyPlanner (GreedyPlanner.java:plan(83)) - Compute Plan for Node : 127.0.0.1:41454 took 42 ms 
msx-debug TestDiskBalancer plan.getVolumeSetPlans().size() = 1
msx-debug TestDiskBalancer after testDiskBalancerEndToEnd:generatePlan()
msx-debug setUsed dfsUsedSpace = 122880, this.getCapacity = 204800
java.lang.Exception
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerVolume.setUsed(DiskBalancerVolume.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:139)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:189)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:161)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:130)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:97)
	at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserializeWithType(AbstractDeserializer.java:254)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1611)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1219)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.NodePlan.parseJson(NodePlan.java:161)
	at org.apache.hadoop.hdfs.server.datanode.DiskBalancer.verifyPlanHash(DiskBalancer.java:413)
	at org.apache.hadoop.hdfs.server.datanode.DiskBalancer.verifyPlan(DiskBalancer.java:363)
	at org.apache.hadoop.hdfs.server.datanode.DiskBalancer.submitPlan(DiskBalancer.java:195)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.submitDiskBalancerPlan(DataNode.java:3596)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$DataMover.executePlan(TestDiskBalancer.java:604)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer.testDiskBalancerEndToEnd(TestDiskBalancer.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
msx-debug setUsed dfsUsedSpace = 122880, this.getCapacity = 204800
java.lang.Exception
	at org.apache.hadoop.hdfs.server.diskbalancer.datamodel.DiskBalancerVolume.setUsed(DiskBalancerVolume.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:139)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:189)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:161)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:130)
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:97)
	at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserializeWithType(AbstractDeserializer.java:254)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1611)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1219)
	at org.apache.hadoop.hdfs.server.diskbalancer.planner.NodePlan.parseJson(NodePlan.java:161)
	at org.apache.hadoop.hdfs.server.datanode.DiskBalancer.verifyPlanHash(DiskBalancer.java:413)
	at org.apache.hadoop.hdfs.server.datanode.DiskBalancer.verifyPlan(DiskBalancer.java:363)
	at org.apache.hadoop.hdfs.server.datanode.DiskBalancer.submitPlan(DiskBalancer.java:195)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.submitDiskBalancerPlan(DataNode.java:3596)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer$DataMover.executePlan(TestDiskBalancer.java:604)
	at org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer.testDiskBalancerEndToEnd(TestDiskBalancer.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2020-06-25 02:15:03,617 [DiskBalancerThread] INFO  datanode.DiskBalancer (DiskBalancer.java:run(541)) - Executing Disk balancer plan. Plan File: /system/current.plan.json, Plan ID: 7c8aa66ef33e788920c1ab7891d7bdf5261a1a9d
2020-06-25 02:15:03,625 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741825_1001 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,633 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741826_1002 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,638 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741827_1003 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,643 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741828_1004 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,648 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741829_1005 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,653 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741830_1006 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,656 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741831_1007 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,660 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741832_1008 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,663 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741833_1009 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,666 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741834_1010 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,669 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741835_1011 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,671 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741836_1012 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,674 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741837_1013 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,676 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741838_1014 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,678 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741839_1015 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,680 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741840_1016 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,683 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741841_1017 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,685 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741842_1018 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,687 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741843_1019 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,690 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741844_1020 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,692 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741845_1021 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,694 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741846_1022 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,696 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741847_1023 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,698 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741848_1024 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,700 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741849_1025 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,701 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741850_1026 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,703 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741851_1027 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,705 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741852_1028 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,707 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741853_1029 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,709 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741854_1030 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,711 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741855_1031 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,713 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741856_1032 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,715 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741857_1033 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,717 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741858_1034 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,719 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741859_1035 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,723 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741860_1036 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,725 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741861_1037 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,728 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741862_1038 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,730 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741863_1039 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,732 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741864_1040 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,735 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741865_1041 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,736 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741866_1042 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,738 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741867_1043 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,740 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741868_1044 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,742 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741869_1045 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,743 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741870_1046 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,745 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741871_1047 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,746 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741872_1048 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,748 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741873_1049 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,750 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741874_1050 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,751 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741875_1051 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,752 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741876_1052 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,754 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741877_1053 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,755 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741878_1054 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,757 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741879_1055 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,758 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741880_1056 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,760 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741881_1057 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,761 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741882_1058 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,763 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741883_1059 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,764 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741884_1060 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,765 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741885_1061 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,767 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741886_1062 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,768 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741887_1063 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,769 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741888_1064 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,770 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741889_1065 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,772 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741890_1066 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,773 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741891_1067 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,774 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741892_1068 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,775 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741893_1069 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,776 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741894_1070 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,778 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741895_1071 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,779 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741896_1072 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:03,780 [DiskBalancerThread] INFO  datanode.DiskBalancer (DiskBalancer.java:copyBlocks(1061)) - Copy from file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/ to file:/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/ done. copied 74752 bytes and 73 blocks.
2020-06-25 02:15:03,780 [Block report processor] WARN  BlockStateChange (BlockManager.java:addStoredBlock(3356)) - BLOCK* addStoredBlock: block blk_1073741897_1073 moved to storageType DISK on node 127.0.0.1:40314
2020-06-25 02:15:04,663 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (DiskBalancerTestUtil.java:getBlockCount(266)) - Block Pool Id:  BP-1096723371-172.17.0.11-1593051297894, blockCount: 27
2020-06-25 02:15:04,672 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (DiskBalancerTestUtil.java:getBlockCount(266)) - Block Pool Id:  BP-1096723371-172.17.0.11-1593051297894, blockCount: 27
2020-06-25 02:15:04,672 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (TestDiskBalancer.java:verifyAllVolumesHaveData(741)) - org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi$FsVolumeReferences@6928f576 : Block Count : 27
2020-06-25 02:15:04,720 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (DiskBalancerTestUtil.java:getBlockCount(266)) - Block Pool Id:  BP-1096723371-172.17.0.11-1593051297894, blockCount: 73
2020-06-25 02:15:04,755 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (DiskBalancerTestUtil.java:getBlockCount(266)) - Block Pool Id:  BP-1096723371-172.17.0.11-1593051297894, blockCount: 73
2020-06-25 02:15:04,755 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (TestDiskBalancer.java:verifyAllVolumesHaveData(741)) - org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi$FsVolumeReferences@6928f576 : Block Count : 73
2020-06-25 02:15:04,761 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (DiskBalancerTestUtil.java:getBlockCount(266)) - Block Pool Id:  BP-1096723371-172.17.0.11-1593051297894, blockCount: 27
2020-06-25 02:15:04,767 [Listener at localhost/41454] INFO  diskbalancer.TestDiskBalancer (DiskBalancerTestUtil.java:getBlockCount(266)) - Block Pool Id:  BP-1096723371-172.17.0.11-1593051297894, blockCount: 27
msx-debug TestDiskBalancer before cluster shutdown
2020-06-25 02:15:04,767 [Listener at localhost/41454] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:shutdown(2049)) - Shutting down the Mini HDFS Cluster
2020-06-25 02:15:04,768 [IPC Server handler 4 on default port 41763] INFO  hdfs.StateChange (FSNamesystem.java:completeFile(2948)) - DIR* completeFile: /system/diskbalancer.id is closed by DFSClient_NONMAPREDUCE_1234183704_1
2020-06-25 02:15:04,770 [IPC Server handler 5 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=getfileinfo	src=/system/diskbalancer.id	dst=null	perm=null	proto=rpc
2020-06-25 02:15:04,781 [IPC Server handler 7 on default port 41763] INFO  FSNamesystem.audit (FSNamesystem.java:logAuditMessage(8074)) - allowed=true	ugi=root (auth:SIMPLE)	ip=/127.0.0.1	cmd=delete	src=/system/diskbalancer.id	dst=null	perm=null	proto=rpc
2020-06-25 02:15:04,784 [Listener at localhost/41454] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:shutdownDataNode(2097)) - Shutting down DataNode 0
2020-06-25 02:15:04,784 [Listener at localhost/41454] WARN  datanode.DirectoryScanner (DirectoryScanner.java:shutdown(343)) - DirectoryScanner: shutdown has been called
2020-06-25 02:15:04,785 [org.apache.hadoop.hdfs.server.datanode.DataXceiverServer@1922e6d] INFO  datanode.DataNode (DataXceiverServer.java:closeAllPeers(281)) - Closing all peers.
2020-06-25 02:15:04,787 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1, DS-2d0d37bd-7015-4b3f-bf15-194100e8ea84) exiting.
2020-06-25 02:15:04,787 [VolumeScannerThread(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2)] INFO  datanode.VolumeScanner (VolumeScanner.java:run(637)) - VolumeScanner(/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2, DS-d0fdd720-4643-45ee-aef7-d1a54e9683fc) exiting.
2020-06-25 02:15:04,808 [Listener at localhost/41454] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.w.WebAppContext@a486d78{/,null,UNAVAILABLE}{/datanode}
2020-06-25 02:15:04,809 [Listener at localhost/41454] INFO  server.AbstractConnector (AbstractConnector.java:doStop(318)) - Stopped ServerConnector@cdc3aae{HTTP/1.1,[http/1.1]}{localhost:0}
2020-06-25 02:15:04,810 [Listener at localhost/41454] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@7f811d00{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,UNAVAILABLE}
2020-06-25 02:15:04,811 [Listener at localhost/41454] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@7bb3a9fe{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,UNAVAILABLE}
2020-06-25 02:15:04,816 [Listener at localhost/41454] INFO  ipc.Server (Server.java:stop(3359)) - Stopping server on 41454
2020-06-25 02:15:04,822 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1330)) - Stopping IPC Server listener on 0
2020-06-25 02:15:04,822 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1465)) - Stopping IPC Server Responder
2020-06-25 02:15:04,828 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.IncrementalBlockReportManager (IncrementalBlockReportManager.java:waitTillNextIBR(160)) - IncrementalBlockReportManager interrupted
2020-06-25 02:15:04,828 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] WARN  datanode.DataNode (BPServiceActor.java:run(860)) - Ending block pool service for: Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b) service to localhost/127.0.0.1:41763
2020-06-25 02:15:04,828 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  datanode.DataNode (BlockPoolManager.java:remove(102)) - Removed Block pool BP-1096723371-172.17.0.11-1593051297894 (Datanode Uuid ccf64283-2ed3-4ece-a868-76f6dc0e933b)
2020-06-25 02:15:04,828 [BP-1096723371-172.17.0.11-1593051297894 heartbeating to localhost/127.0.0.1:41763] INFO  impl.FsDatasetImpl (FsDatasetImpl.java:shutdownBlockPool(2814)) - Removing block pool BP-1096723371-172.17.0.11-1593051297894
msx-debug saveDfsUsed 797696 1593051304829
2020-06-25 02:15:04,829 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data1/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
msx-debug saveDfsUsed 116515 1593051304830
2020-06-25 02:15:04,830 [refreshUsed-/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/data/data2/current/BP-1096723371-172.17.0.11-1593051297894] WARN  fs.CachingGetSpaceUsed (CachingGetSpaceUsed.java:run(184)) - Thread Interrupted waiting to refresh disk information: sleep interrupted
2020-06-25 02:15:04,835 [Listener at localhost/41454] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(193)) - Shutting down all async disk service threads
2020-06-25 02:15:04,835 [Listener at localhost/41454] INFO  impl.FsDatasetAsyncDiskService (FsDatasetAsyncDiskService.java:shutdown(201)) - All async disk service threads have been shut down
2020-06-25 02:15:04,836 [Listener at localhost/41454] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(177)) - Shutting down all async lazy persist service threads
2020-06-25 02:15:04,836 [Listener at localhost/41454] INFO  impl.RamDiskAsyncLazyPersistService (RamDiskAsyncLazyPersistService.java:shutdown(184)) - All async lazy persist service threads have been shut down
2020-06-25 02:15:04,839 [Listener at localhost/41454] INFO  datanode.DataNode (DataNode.java:shutdown(2170)) - Shutdown complete.
2020-06-25 02:15:04,839 [Listener at localhost/41454] INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:stopAndJoinNameNode(2130)) - Shutting down the namenode
2020-06-25 02:15:04,839 [Listener at localhost/41454] INFO  namenode.FSNamesystem (FSNamesystem.java:stopActiveServices(1334)) - Stopping services started for active state
2020-06-25 02:15:04,839 [Listener at localhost/41454] INFO  namenode.FSEditLog (FSEditLog.java:endCurrentLogSegment(1410)) - Ending log segment 1, 307
2020-06-25 02:15:04,840 [org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber@101639ae] INFO  namenode.FSNamesystem (FSNamesystem.java:run(4198)) - LazyPersistFileScrubber was interrupted, exiting
2020-06-25 02:15:04,840 [Listener at localhost/41454] INFO  namenode.FSEditLog (FSEditLog.java:printStatistics(778)) - Number of transactions: 308 Total time for transactions(ms): 34 Number of transactions batched in Syncs: 99 Number of syncs: 210 SyncTimes(ms): 12 4 
2020-06-25 02:15:04,840 [org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller@44e3a2b2] INFO  namenode.FSNamesystem (FSNamesystem.java:run(4107)) - NameNodeEditLogRoller was interrupted, exiting
2020-06-25 02:15:04,842 [Listener at localhost/41454] INFO  namenode.FileJournalManager (FileJournalManager.java:finalizeLogSegment(145)) - Finalizing edits file /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/current/edits_inprogress_0000000000000000001 -> /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-1/current/edits_0000000000000000001-0000000000000000308
2020-06-25 02:15:04,843 [Listener at localhost/41454] INFO  namenode.FileJournalManager (FileJournalManager.java:finalizeLogSegment(145)) - Finalizing edits file /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2/current/edits_inprogress_0000000000000000001 -> /root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/test/data/dfs/name-0-2/current/edits_0000000000000000001-0000000000000000308
2020-06-25 02:15:04,844 [FSEditLogAsync] INFO  namenode.FSEditLog (FSEditLogAsync.java:run(253)) - FSEditLogAsync was interrupted, exiting
2020-06-25 02:15:04,849 [CacheReplicationMonitor(160473686)] INFO  blockmanagement.CacheReplicationMonitor (CacheReplicationMonitor.java:run(169)) - Shutting down CacheReplicationMonitor
2020-06-25 02:15:04,850 [Listener at localhost/41454] INFO  ipc.Server (Server.java:stop(3359)) - Stopping server on 41763
2020-06-25 02:15:04,851 [IPC Server listener on 0] INFO  ipc.Server (Server.java:run(1330)) - Stopping IPC Server listener on 0
2020-06-25 02:15:04,851 [RedundancyMonitor] INFO  blockmanagement.BlockManager (BlockManager.java:run(4687)) - Stopping RedundancyMonitor.
2020-06-25 02:15:04,852 [IPC Server Responder] INFO  ipc.Server (Server.java:run(1465)) - Stopping IPC Server Responder
2020-06-25 02:15:04,852 [StorageInfoMonitor] INFO  blockmanagement.BlockManager (BlockManager.java:run(4722)) - Stopping thread.
2020-06-25 02:15:04,901 [Listener at localhost/41454] INFO  namenode.FSNamesystem (FSNamesystem.java:stopActiveServices(1334)) - Stopping services started for active state
2020-06-25 02:15:04,901 [Listener at localhost/41454] INFO  namenode.FSNamesystem (FSNamesystem.java:stopStandbyServices(1434)) - Stopping services started for standby state
2020-06-25 02:15:04,902 [Listener at localhost/41454] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.w.WebAppContext@2e570ded{/,null,UNAVAILABLE}{/hdfs}
2020-06-25 02:15:04,904 [Listener at localhost/41454] INFO  server.AbstractConnector (AbstractConnector.java:doStop(318)) - Stopped ServerConnector@51bf5add{HTTP/1.1,[http/1.1]}{localhost:0}
2020-06-25 02:15:04,904 [Listener at localhost/41454] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@6b695b06{/static,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/src/main/webapps/static/,UNAVAILABLE}
2020-06-25 02:15:04,904 [Listener at localhost/41454] INFO  handler.ContextHandler (ContextHandler.java:doStop(910)) - Stopped o.e.j.s.ServletContextHandler@71075444{/logs,file:///root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs/target/log/,UNAVAILABLE}
2020-06-25 02:15:04,905 [Listener at localhost/41454] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:stop(210)) - Stopping DataNode metrics system...
2020-06-25 02:15:04,910 [Listener at localhost/41454] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:stop(216)) - DataNode metrics system stopped.
2020-06-25 02:15:04,910 [Listener at localhost/41454] INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:shutdown(607)) - DataNode metrics system shutdown complete.
msx-listener testfinished org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer#testDiskBalancerEndToEnd
msx-listener writeFile testName is org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer#testDiskBalancerEndToEnd
msx-listener INFO: file existed /root/parameter_test_controller/shared/test_results/org.apache.hadoop.hdfs.server.diskbalancer.TestDiskBalancer#testDiskBalancerEndToEnd
msx-listener succeed
msx-listener all testRunFinished
